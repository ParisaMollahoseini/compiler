Terminals unused in grammar

   COND_OR
   COND_AND
   LOG_OR
   LOG_XOR
   LOG_AND
   ISNOTEQ
   ISEQ
   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '+'
   '*'
   '/'
   NOT
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR
   NUM


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM
    4        | ENTER

    5 FTYPE: VOID
    6      | INT

    7 PARAMS: /* empty */
    8       | VTYPE ID
    9       | VTYPE ID ',' VTYPE ID
   10       | VTYPE ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

   12 VTYPE: CHAR
   13      | INT

   14 STMTS: DECLARE_STMT
   15      | ASSIGN_STMT
   16      | WHILE_STMT
   17      | IF_STMT
   18      | FUNC_CALL
   19      | RETURN_STMT
   20      | ENTER

   21 $@3: /* empty */

   22 DECLARE_STMT: INT ID $@3 IDS '$' STMTS

   23 $@4: /* empty */

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS

   25 $@5: /* empty */

   26 DECLARE_STMT: CHAR ID $@5 IDS '$' STMTS

   27 $@6: /* empty */

   28 DECLARE_STMT: CHAR ID EQ char_val $@6 '$' STMTS

   29 IDS: /* empty */

   30 $@7: /* empty */

   31 IDS: ',' ID $@7 IDS

   32 $@8: /* empty */

   33 ASSIGN_STMT: ID EQ EXP '$' $@8 STMTS

   34 $@9: /* empty */

   35 $@10: /* empty */

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' STMTS '}' $@10 STMTS

   37 $@11: /* empty */

   38 $@12: /* empty */

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

   40 $@13: /* empty */

   41 $@14: /* empty */

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' STMTS '}' $@14 ELSEIF
   43            | ENTER

   44 $@15: /* empty */

   45 ELSE_STMT: ELSE $@15 '{' STMTS '}'
   46          | ENTER

   47 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   48 ARGS_IN: /* empty */
   49        | EXP ',' EXP ',' EXP ',' EXP
   50        | EXP ',' EXP ',' EXP
   51        | EXP ',' EXP
   52        | EXP

   53 RETURN_STMT: RETURN EXP '$' STMTS

   54 EXP: INTVAL
   55    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 22 24 26 28 33 47 53
'(' (40) 3 36 39 42 47
')' (41) 3 36 39 42 47
'*' (42)
'+' (43)
',' (44) 9 10 11 31 49 50 51
'-' (45) 55
'/' (47)
'[' (91)
']' (93)
'{' (123) 3 36 39 42 45
'}' (125) 3 36 39 42 45
error (256)
INTVAL (258) 54
char_val (259) 28
COND_OR (260)
COND_AND (261)
LOG_OR (262)
LOG_XOR (263)
LOG_AND (264)
ISNOTEQ (265)
ISEQ (266)
ISHIGHERANDEQ (267)
ISHIGHER (268)
ISLOWERANDEQ (269)
ISLOWER (270)
NOT (271)
ENTER (272) 4 20 43 46
VALUE_ID (273)
EQ (274) 24 28 33
MULTI_COMMENT (275)
COMMENT (276)
CHAR (277) 12 26 28
INT (278) 6 13 22 24
CONTINUE (279)
BREAK (280)
RETURN (281) 53
MAIN (282)
FOR (283)
VOID (284) 5
ELSE (285) 45
ELSEIF (286) 42
WHILE (287) 36
IF (288) 39
NUM (289)
ID (290) 3 8 9 10 11 22 24 26 28 31 33 47


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
EXP (49)
    on left: 54 55, on right: 24 33 36 39 42 49 50 51 52 53 55
PARAMS (50)
    on left: 7 8 9 10 11, on right: 3
ARGS_IN (51)
    on left: 48 49 50 51 52, on right: 47
PROGRAM (52)
    on left: 3 4, on right: 0 3
$@1 (53)
    on left: 1, on right: 3
$@2 (54)
    on left: 2, on right: 3
FTYPE (55)
    on left: 5 6, on right: 3
VTYPE (56)
    on left: 12 13, on right: 8 9 10 11
STMTS (57)
    on left: 14 15 16 17 18 19 20, on right: 3 22 24 26 28 33 36 39
    42 45 47 53
DECLARE_STMT (58)
    on left: 22 24 26 28, on right: 14
$@3 (59)
    on left: 21, on right: 22
$@4 (60)
    on left: 23, on right: 24
$@5 (61)
    on left: 25, on right: 26
$@6 (62)
    on left: 27, on right: 28
IDS (63)
    on left: 29 31, on right: 22 26 31
$@7 (64)
    on left: 30, on right: 31
ASSIGN_STMT (65)
    on left: 33, on right: 15
$@8 (66)
    on left: 32, on right: 33
WHILE_STMT (67)
    on left: 36, on right: 16
$@9 (68)
    on left: 34, on right: 36
$@10 (69)
    on left: 35, on right: 36
IF_STMT (70)
    on left: 39, on right: 17
$@11 (71)
    on left: 37, on right: 39
$@12 (72)
    on left: 38, on right: 39
ELSEIF_STMT (73)
    on left: 42 43, on right: 39
$@13 (74)
    on left: 40, on right: 42
$@14 (75)
    on left: 41, on right: 42
ELSE_STMT (76)
    on left: 45 46, on right: 39
$@15 (77)
    on left: 44, on right: 45
FUNC_CALL (78)
    on left: 47, on right: 18
RETURN_STMT (79)
    on left: 53, on right: 19


state 0

    0 $accept: . PROGRAM $end

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 4
    FTYPE    go to state 5


state 1

    4 PROGRAM: ENTER .

    $default  reduce using rule 4 (PROGRAM)


state 2

    6 FTYPE: INT .

    $default  reduce using rule 6 (FTYPE)


state 3

    5 FTYPE: VOID .

    $default  reduce using rule 5 (FTYPE)


state 4

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


state 5

    3 PROGRAM: FTYPE . ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    ID  shift, and go to state 7


state 6

    0 $accept: PROGRAM $end .

    $default  accept


state 7

    3 PROGRAM: FTYPE ID . '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    '('  shift, and go to state 8


state 8

    3 PROGRAM: FTYPE ID '(' . PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 7 (PARAMS)

    PARAMS  go to state 11
    VTYPE   go to state 12


state 9

   12 VTYPE: CHAR .

    $default  reduce using rule 12 (VTYPE)


state 10

   13 VTYPE: INT .

    $default  reduce using rule 13 (VTYPE)


state 11

    3 PROGRAM: FTYPE ID '(' PARAMS . $@1 ')' '{' STMTS '}' $@2 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 13


state 12

    8 PARAMS: VTYPE . ID
    9       | VTYPE . ID ',' VTYPE ID
   10       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 14


state 13

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 . ')' '{' STMTS '}' $@2 PROGRAM

    ')'  shift, and go to state 15


state 14

    8 PARAMS: VTYPE ID .
    9       | VTYPE ID . ',' VTYPE ID
   10       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 16

    $default  reduce using rule 8 (PARAMS)


state 15

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' . '{' STMTS '}' $@2 PROGRAM

    '{'  shift, and go to state 17


state 16

    9 PARAMS: VTYPE ID ',' . VTYPE ID
   10       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 18


state 17

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' . STMTS '}' $@2 PROGRAM

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 26
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 18

    9 PARAMS: VTYPE ID ',' VTYPE . ID
   10       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 33


state 19

   20 STMTS: ENTER .

    $default  reduce using rule 20 (STMTS)


state 20

   26 DECLARE_STMT: CHAR . ID $@5 IDS '$' STMTS
   28             | CHAR . ID EQ char_val $@6 '$' STMTS

    ID  shift, and go to state 34


state 21

   22 DECLARE_STMT: INT . ID $@3 IDS '$' STMTS
   24             | INT . ID EQ EXP $@4 '$' STMTS

    ID  shift, and go to state 35


state 22

   53 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 38


state 23

   36 WHILE_STMT: WHILE . $@9 '(' EXP ')' '{' STMTS '}' $@10 STMTS

    $default  reduce using rule 34 ($@9)

    $@9  go to state 39


state 24

   39 IF_STMT: IF . $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    $default  reduce using rule 37 ($@11)

    $@11  go to state 40


state 25

   33 ASSIGN_STMT: ID . EQ EXP '$' $@8 STMTS
   47 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 41
    EQ   shift, and go to state 42


state 26

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS . '}' $@2 PROGRAM

    '}'  shift, and go to state 43


state 27

   14 STMTS: DECLARE_STMT .

    $default  reduce using rule 14 (STMTS)


state 28

   15 STMTS: ASSIGN_STMT .

    $default  reduce using rule 15 (STMTS)


state 29

   16 STMTS: WHILE_STMT .

    $default  reduce using rule 16 (STMTS)


state 30

   17 STMTS: IF_STMT .

    $default  reduce using rule 17 (STMTS)


state 31

   18 STMTS: FUNC_CALL .

    $default  reduce using rule 18 (STMTS)


state 32

   19 STMTS: RETURN_STMT .

    $default  reduce using rule 19 (STMTS)


state 33

    9 PARAMS: VTYPE ID ',' VTYPE ID .
   10       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 44

    $default  reduce using rule 9 (PARAMS)


state 34

   26 DECLARE_STMT: CHAR ID . $@5 IDS '$' STMTS
   28             | CHAR ID . EQ char_val $@6 '$' STMTS

    EQ  shift, and go to state 45

    $default  reduce using rule 25 ($@5)

    $@5  go to state 46


state 35

   22 DECLARE_STMT: INT ID . $@3 IDS '$' STMTS
   24             | INT ID . EQ EXP $@4 '$' STMTS

    EQ  shift, and go to state 47

    $default  reduce using rule 21 ($@3)

    $@3  go to state 48


state 36

   54 EXP: INTVAL .

    $default  reduce using rule 54 (EXP)


state 37

   55 EXP: '-' . EXP

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 49


state 38

   53 RETURN_STMT: RETURN EXP . '$' STMTS

    '$'  shift, and go to state 50


state 39

   36 WHILE_STMT: WHILE $@9 . '(' EXP ')' '{' STMTS '}' $@10 STMTS

    '('  shift, and go to state 51


state 40

   39 IF_STMT: IF $@11 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    '('  shift, and go to state 52


state 41

   47 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    $default  reduce using rule 48 (ARGS_IN)

    EXP      go to state 53
    ARGS_IN  go to state 54


state 42

   33 ASSIGN_STMT: ID EQ . EXP '$' $@8 STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 55


state 43

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' . $@2 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 56


state 44

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' . VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' . VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 57


state 45

   28 DECLARE_STMT: CHAR ID EQ . char_val $@6 '$' STMTS

    char_val  shift, and go to state 58


state 46

   26 DECLARE_STMT: CHAR ID $@5 . IDS '$' STMTS

    ','  shift, and go to state 59

    $default  reduce using rule 29 (IDS)

    IDS  go to state 60


state 47

   24 DECLARE_STMT: INT ID EQ . EXP $@4 '$' STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 61


state 48

   22 DECLARE_STMT: INT ID $@3 . IDS '$' STMTS

    ','  shift, and go to state 59

    $default  reduce using rule 29 (IDS)

    IDS  go to state 62


state 49

   55 EXP: '-' EXP .

    $default  reduce using rule 55 (EXP)


state 50

   53 RETURN_STMT: RETURN EXP '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 63
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 51

   36 WHILE_STMT: WHILE $@9 '(' . EXP ')' '{' STMTS '}' $@10 STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 64


state 52

   39 IF_STMT: IF $@11 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 65


state 53

   49 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   50        | EXP . ',' EXP ',' EXP
   51        | EXP . ',' EXP
   52        | EXP .

    ','  shift, and go to state 66

    $default  reduce using rule 52 (ARGS_IN)


state 54

   47 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 67


state 55

   33 ASSIGN_STMT: ID EQ EXP . '$' $@8 STMTS

    '$'  shift, and go to state 68


state 56

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 . PROGRAM

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 69
    FTYPE    go to state 5


state 57

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE . ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE . ID ',' VTYPE ID

    ID  shift, and go to state 70


state 58

   28 DECLARE_STMT: CHAR ID EQ char_val . $@6 '$' STMTS

    $default  reduce using rule 27 ($@6)

    $@6  go to state 71


state 59

   31 IDS: ',' . ID $@7 IDS

    ID  shift, and go to state 72


state 60

   26 DECLARE_STMT: CHAR ID $@5 IDS . '$' STMTS

    '$'  shift, and go to state 73


state 61

   24 DECLARE_STMT: INT ID EQ EXP . $@4 '$' STMTS

    $default  reduce using rule 23 ($@4)

    $@4  go to state 74


state 62

   22 DECLARE_STMT: INT ID $@3 IDS . '$' STMTS

    '$'  shift, and go to state 75


state 63

   53 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 53 (RETURN_STMT)


state 64

   36 WHILE_STMT: WHILE $@9 '(' EXP . ')' '{' STMTS '}' $@10 STMTS

    ')'  shift, and go to state 76


state 65

   39 IF_STMT: IF $@11 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    ')'  shift, and go to state 77


state 66

   49 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   50        | EXP ',' . EXP ',' EXP
   51        | EXP ',' . EXP

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 78


state 67

   47 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 79


state 68

   33 ASSIGN_STMT: ID EQ EXP '$' . $@8 STMTS

    $default  reduce using rule 32 ($@8)

    $@8  go to state 80


state 69

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM .

    $default  reduce using rule 3 (PROGRAM)


state 70

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID .
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID . ',' VTYPE ID

    ','  shift, and go to state 81

    $default  reduce using rule 10 (PARAMS)


state 71

   28 DECLARE_STMT: CHAR ID EQ char_val $@6 . '$' STMTS

    '$'  shift, and go to state 82


state 72

   31 IDS: ',' ID . $@7 IDS

    $default  reduce using rule 30 ($@7)

    $@7  go to state 83


state 73

   26 DECLARE_STMT: CHAR ID $@5 IDS '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 84
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 74

   24 DECLARE_STMT: INT ID EQ EXP $@4 . '$' STMTS

    '$'  shift, and go to state 85


state 75

   22 DECLARE_STMT: INT ID $@3 IDS '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 86
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 76

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' . '{' STMTS '}' $@10 STMTS

    '{'  shift, and go to state 87


state 77

   39 IF_STMT: IF $@11 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    '{'  shift, and go to state 88


state 78

   49 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   50        | EXP ',' EXP . ',' EXP
   51        | EXP ',' EXP .

    ','  shift, and go to state 89

    $default  reduce using rule 51 (ARGS_IN)


state 79

   47 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 90
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 80

   33 ASSIGN_STMT: ID EQ EXP '$' $@8 . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 91
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 81

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 92


state 82

   28 DECLARE_STMT: CHAR ID EQ char_val $@6 '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 93
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 83

   31 IDS: ',' ID $@7 . IDS

    ','  shift, and go to state 59

    $default  reduce using rule 29 (IDS)

    IDS  go to state 94


state 84

   26 DECLARE_STMT: CHAR ID $@5 IDS '$' STMTS .

    $default  reduce using rule 26 (DECLARE_STMT)


state 85

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 95
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 86

   22 DECLARE_STMT: INT ID $@3 IDS '$' STMTS .

    $default  reduce using rule 22 (DECLARE_STMT)


state 87

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' . STMTS '}' $@10 STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 96
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 88

   39 IF_STMT: IF $@11 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 97
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 89

   49 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   50        | EXP ',' EXP ',' . EXP

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 98


state 90

   47 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 47 (FUNC_CALL)


state 91

   33 ASSIGN_STMT: ID EQ EXP '$' $@8 STMTS .

    $default  reduce using rule 33 (ASSIGN_STMT)


state 92

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE . ID

    ID  shift, and go to state 99


state 93

   28 DECLARE_STMT: CHAR ID EQ char_val $@6 '$' STMTS .

    $default  reduce using rule 28 (DECLARE_STMT)


state 94

   31 IDS: ',' ID $@7 IDS .

    $default  reduce using rule 31 (IDS)


state 95

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS .

    $default  reduce using rule 24 (DECLARE_STMT)


state 96

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' STMTS . '}' $@10 STMTS

    '}'  shift, and go to state 100


state 97

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@12 STMTS

    '}'  shift, and go to state 101


state 98

   49 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   50        | EXP ',' EXP ',' EXP .

    ','  shift, and go to state 102

    $default  reduce using rule 50 (ARGS_IN)


state 99

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID .

    $default  reduce using rule 11 (PARAMS)


state 100

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' STMTS '}' . $@10 STMTS

    $default  reduce using rule 35 ($@10)

    $@10  go to state 103


state 101

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@12 STMTS

    ENTER   shift, and go to state 104
    ELSEIF  shift, and go to state 105

    ELSEIF_STMT  go to state 106


state 102

   49 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 107


state 103

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' STMTS '}' $@10 . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 108
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 104

   43 ELSEIF_STMT: ENTER .

    $default  reduce using rule 43 (ELSEIF_STMT)


state 105

   42 ELSEIF_STMT: ELSEIF . $@13 '(' EXP ')' '{' STMTS '}' $@14 ELSEIF

    $default  reduce using rule 40 ($@13)

    $@13  go to state 109


state 106

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@12 STMTS

    ENTER  shift, and go to state 110
    ELSE   shift, and go to state 111

    ELSE_STMT  go to state 112


state 107

   49 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .

    $default  reduce using rule 49 (ARGS_IN)


state 108

   36 WHILE_STMT: WHILE $@9 '(' EXP ')' '{' STMTS '}' $@10 STMTS .

    $default  reduce using rule 36 (WHILE_STMT)


state 109

   42 ELSEIF_STMT: ELSEIF $@13 . '(' EXP ')' '{' STMTS '}' $@14 ELSEIF

    '('  shift, and go to state 113


state 110

   46 ELSE_STMT: ENTER .

    $default  reduce using rule 46 (ELSE_STMT)


state 111

   45 ELSE_STMT: ELSE . $@15 '{' STMTS '}'

    $default  reduce using rule 44 ($@15)

    $@15  go to state 114


state 112

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@12 STMTS

    $default  reduce using rule 38 ($@12)

    $@12  go to state 115


state 113

   42 ELSEIF_STMT: ELSEIF $@13 '(' . EXP ')' '{' STMTS '}' $@14 ELSEIF

    INTVAL  shift, and go to state 36
    '-'     shift, and go to state 37

    EXP  go to state 116


state 114

   45 ELSE_STMT: ELSE $@15 . '{' STMTS '}'

    '{'  shift, and go to state 117


state 115

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 . STMTS

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 118
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 116

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP . ')' '{' STMTS '}' $@14 ELSEIF

    ')'  shift, and go to state 119


state 117

   45 ELSE_STMT: ELSE $@15 '{' . STMTS '}'

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 120
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 118

   39 IF_STMT: IF $@11 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@12 STMTS .

    $default  reduce using rule 39 (IF_STMT)


state 119

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' . '{' STMTS '}' $@14 ELSEIF

    '{'  shift, and go to state 121


state 120

   45 ELSE_STMT: ELSE $@15 '{' STMTS . '}'

    '}'  shift, and go to state 122


state 121

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' . STMTS '}' $@14 ELSEIF

    ENTER   shift, and go to state 19
    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    STMTS         go to state 123
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 122

   45 ELSE_STMT: ELSE $@15 '{' STMTS '}' .

    $default  reduce using rule 45 (ELSE_STMT)


state 123

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' STMTS . '}' $@14 ELSEIF

    '}'  shift, and go to state 124


state 124

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' STMTS '}' . $@14 ELSEIF

    $default  reduce using rule 41 ($@14)

    $@14  go to state 125


state 125

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' STMTS '}' $@14 . ELSEIF

    ELSEIF  shift, and go to state 126


state 126

   42 ELSEIF_STMT: ELSEIF $@13 '(' EXP ')' '{' STMTS '}' $@14 ELSEIF .

    $default  reduce using rule 42 (ELSEIF_STMT)
