Terminals unused in grammar

   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '*'
   '/'
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR
   NUM


Grammar

    0 $accept: start $end

    1 $@1: /* empty */

    2 start: $@1 PROGRAM

    3 $@2: /* empty */

    4 $@3: /* empty */

    5 $@4: /* empty */

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM
    7        | /* empty */

    8 FTYPE: VOID
    9      | INT

   10 PARAMS: /* empty */
   11       | VTYPE ID
   12       | THREE_ID ',' VTYPE ID
   13       | THREE_ID THREE_ID_COMMA ',' VTYPE ID
   14       | THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID

   15 VTYPE: CHAR
   16      | INT

   17 THREE_ID: VTYPE ID

   18 THREE_ID_COMMA: ',' VTYPE ID

   19 STMTS: DECLARE_STMT
   20      | ASSIGN_STMT
   21      | WHILE_STMT
   22      | IF_STMT
   23      | FUNC_CALL
   24      | RETURN_STMT
   25      | /* empty */

   26 $@5: /* empty */

   27 DECLARE_STMT: INT ID $@5 IDS '$' STMTS

   28 $@6: /* empty */

   29 DECLARE_STMT: INT ID EQ EXP $@6 '$' STMTS

   30 $@7: /* empty */

   31 DECLARE_STMT: CHAR ID $@7 IDS '$' STMTS

   32 $@8: /* empty */

   33 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' STMTS

   34 IDS: /* empty */

   35 $@9: /* empty */

   36 IDS: ',' ID $@9 IDS

   37 $@10: /* empty */

   38 ASSIGN_STMT: ID EQ EXP '$' $@10 STMTS

   39 $@11: /* empty */

   40 $@12: /* empty */

   41 $@13: /* empty */

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

   43 $@14: /* empty */

   44 $@15: /* empty */

   45 $@16: /* empty */

   46 $@17: /* empty */

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

   48 $@18: /* empty */

   49 $@19: /* empty */

   50 $@20: /* empty */

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT
   52            | ELSE_STMT

   53 $@21: /* empty */

   54 ELSE_STMT: ELSE $@21 '{' STMTS '}'
   55          | /* empty */

   56 $@22: /* empty */

   57 $@23: /* empty */

   58 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 STMTS

   59 $@24: /* empty */

   60 $@25: /* empty */

   61 $@26: /* empty */

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

   63 ARGS_IN: /* empty */
   64        | EXP ',' EXP ',' EXP ',' EXP
   65        | EXP ',' EXP ',' EXP
   66        | EXP ',' EXP
   67        | EXP

   68 $@27: /* empty */

   69 RETURN_STMT: RETURN EXP '$' $@27 STMTS

   70 EXP: EXP ISEQ EXP
   71    | EXP ISNOTEQ EXP
   72    | EXP '+' EXP
   73    | EXP '-' EXP
   74    | INTVAL
   75    | EXP COND_AND EXP
   76    | EXP COND_OR EXP
   77    | EXP LOG_OR EXP
   78    | EXP LOG_AND EXP
   79    | EXP LOG_XOR EXP
   80    | NOT EXP
   81    | '(' EXP ')'
   82    | char_val
   83    | ID
   84    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 27 29 31 33 38 58 62 69
'(' (40) 6 42 47 51 58 62 81
')' (41) 6 42 47 51 58 62 81
'*' (42)
'+' (43) 72
',' (44) 12 13 14 18 36 64 65 66
'-' (45) 73 84
'/' (47)
'[' (91)
']' (93)
'{' (123) 6 42 47 51 54
'}' (125) 6 42 47 51 54
error (256)
INTVAL (258) 74
char_val (259) 82
COND_OR (260) 76
COND_AND (261) 75
LOG_OR (262) 77
LOG_XOR (263) 79
LOG_AND (264) 78
ISNOTEQ (265) 71
ISEQ (266) 70
ISHIGHERANDEQ (267)
ISHIGHER (268)
ISLOWERANDEQ (269)
ISLOWER (270)
NOT (271) 80
VALUE_ID (272)
EQ (273) 29 33 38 62
MULTI_COMMENT (274)
COMMENT (275)
CHAR (276) 15 31 33
INT (277) 9 16 27 29
CONTINUE (278)
BREAK (279)
RETURN (280) 69
MAIN (281)
FOR (282)
VOID (283) 8
ELSE (284) 54
ELSEIF (285) 51
WHILE (286) 42
IF (287) 47
NUM (288)
ID (289) 6 11 12 13 14 17 18 27 29 31 33 36 38 58 62 83


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
EXP (48)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84, on right:
    29 33 38 42 47 51 64 65 66 67 69 70 71 72 73 75 76 77 78 79 80
    81 84
FTYPE (49)
    on left: 8 9, on right: 6
VTYPE (50)
    on left: 15 16, on right: 11 12 13 14 17 18
PARAMS (51)
    on left: 10 11 12 13 14, on right: 6
FUNC_CALL (52)
    on left: 58 62, on right: 23
ARGS_IN (53)
    on left: 63 64 65 66 67, on right: 58 62
start (54)
    on left: 2, on right: 0
$@1 (55)
    on left: 1, on right: 2
PROGRAM (56)
    on left: 6 7, on right: 2 6
$@2 (57)
    on left: 3, on right: 6
$@3 (58)
    on left: 4, on right: 6
$@4 (59)
    on left: 5, on right: 6
THREE_ID (60)
    on left: 17, on right: 12 13 14
THREE_ID_COMMA (61)
    on left: 18, on right: 13 14
STMTS (62)
    on left: 19 20 21 22 23 24 25, on right: 6 27 29 31 33 38 42 47
    51 54 58 62 69
DECLARE_STMT (63)
    on left: 27 29 31 33, on right: 19
$@5 (64)
    on left: 26, on right: 27
$@6 (65)
    on left: 28, on right: 29
$@7 (66)
    on left: 30, on right: 31
$@8 (67)
    on left: 32, on right: 33
IDS (68)
    on left: 34 36, on right: 27 31 36
$@9 (69)
    on left: 35, on right: 36
ASSIGN_STMT (70)
    on left: 38, on right: 20
$@10 (71)
    on left: 37, on right: 38
WHILE_STMT (72)
    on left: 42, on right: 21
$@11 (73)
    on left: 39, on right: 42
$@12 (74)
    on left: 40, on right: 42
$@13 (75)
    on left: 41, on right: 42
IF_STMT (76)
    on left: 47, on right: 22
$@14 (77)
    on left: 43, on right: 47
$@15 (78)
    on left: 44, on right: 47
$@16 (79)
    on left: 45, on right: 47
$@17 (80)
    on left: 46, on right: 47
ELSEIF_STMT (81)
    on left: 51 52, on right: 47 51
$@18 (82)
    on left: 48, on right: 51
$@19 (83)
    on left: 49, on right: 51
$@20 (84)
    on left: 50, on right: 51
ELSE_STMT (85)
    on left: 54 55, on right: 52
$@21 (86)
    on left: 53, on right: 54
$@22 (87)
    on left: 56, on right: 58
$@23 (88)
    on left: 57, on right: 58
$@24 (89)
    on left: 59, on right: 62
$@25 (90)
    on left: 60, on right: 62
$@26 (91)
    on left: 61, on right: 62
RETURN_STMT (92)
    on left: 69, on right: 24
$@27 (93)
    on left: 68, on right: 69


state 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


state 1

    0 $accept: start . $end

    $end  shift, and go to state 3


state 2

    2 start: $@1 . PROGRAM

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 7 (PROGRAM)

    FTYPE    go to state 6
    PROGRAM  go to state 7


state 3

    0 $accept: start $end .

    $default  accept


state 4

    9 FTYPE: INT .

    $default  reduce using rule 9 (FTYPE)


state 5

    8 FTYPE: VOID .

    $default  reduce using rule 8 (FTYPE)


state 6

    6 PROGRAM: FTYPE . ID $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    ID  shift, and go to state 8


state 7

    2 start: $@1 PROGRAM .

    $default  reduce using rule 2 (start)


state 8

    6 PROGRAM: FTYPE ID . $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    $default  reduce using rule 3 ($@2)

    $@2  go to state 9


state 9

    6 PROGRAM: FTYPE ID $@2 . '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    '('  shift, and go to state 10


state 10

    6 PROGRAM: FTYPE ID $@2 '(' . PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    CHAR  shift, and go to state 11
    INT   shift, and go to state 12

    $default  reduce using rule 10 (PARAMS)

    VTYPE     go to state 13
    PARAMS    go to state 14
    THREE_ID  go to state 15


state 11

   15 VTYPE: CHAR .

    $default  reduce using rule 15 (VTYPE)


state 12

   16 VTYPE: INT .

    $default  reduce using rule 16 (VTYPE)


state 13

   11 PARAMS: VTYPE . ID
   17 THREE_ID: VTYPE . ID

    ID  shift, and go to state 16


state 14

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS . $@3 ')' '{' STMTS '}' $@4 PROGRAM

    $default  reduce using rule 4 ($@3)

    $@3  go to state 17


state 15

   12 PARAMS: THREE_ID . ',' VTYPE ID
   13       | THREE_ID . THREE_ID_COMMA ',' VTYPE ID
   14       | THREE_ID . THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID

    ','  shift, and go to state 18

    THREE_ID_COMMA  go to state 19


state 16

   11 PARAMS: VTYPE ID .
   17 THREE_ID: VTYPE ID .

    ','       reduce using rule 17 (THREE_ID)
    $default  reduce using rule 11 (PARAMS)


state 17

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 . ')' '{' STMTS '}' $@4 PROGRAM

    ')'  shift, and go to state 20


state 18

   12 PARAMS: THREE_ID ',' . VTYPE ID
   18 THREE_ID_COMMA: ',' . VTYPE ID

    CHAR  shift, and go to state 11
    INT   shift, and go to state 12

    VTYPE  go to state 21


state 19

   13 PARAMS: THREE_ID THREE_ID_COMMA . ',' VTYPE ID
   14       | THREE_ID THREE_ID_COMMA . THREE_ID_COMMA ',' VTYPE ID

    ','  shift, and go to state 22

    THREE_ID_COMMA  go to state 23


state 20

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' . '{' STMTS '}' $@4 PROGRAM

    '{'  shift, and go to state 24


state 21

   12 PARAMS: THREE_ID ',' VTYPE . ID
   18 THREE_ID_COMMA: ',' VTYPE . ID

    ID  shift, and go to state 25


state 22

   13 PARAMS: THREE_ID THREE_ID_COMMA ',' . VTYPE ID
   18 THREE_ID_COMMA: ',' . VTYPE ID

    CHAR  shift, and go to state 11
    INT   shift, and go to state 12

    VTYPE  go to state 26


state 23

   14 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA . ',' VTYPE ID

    ','  shift, and go to state 27


state 24

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' . STMTS '}' $@4 PROGRAM

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 35
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 25

   12 PARAMS: THREE_ID ',' VTYPE ID .
   18 THREE_ID_COMMA: ',' VTYPE ID .

    ','       reduce using rule 18 (THREE_ID_COMMA)
    $default  reduce using rule 12 (PARAMS)


state 26

   13 PARAMS: THREE_ID THREE_ID_COMMA ',' VTYPE . ID
   18 THREE_ID_COMMA: ',' VTYPE . ID

    ID  shift, and go to state 41


state 27

   14 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' . VTYPE ID

    CHAR  shift, and go to state 11
    INT   shift, and go to state 12

    VTYPE  go to state 42


state 28

   31 DECLARE_STMT: CHAR . ID $@7 IDS '$' STMTS
   33             | CHAR . ID EQ EXP $@8 '$' STMTS

    ID  shift, and go to state 43


state 29

   27 DECLARE_STMT: INT . ID $@5 IDS '$' STMTS
   29             | INT . ID EQ EXP $@6 '$' STMTS

    ID  shift, and go to state 44


state 30

   69 RETURN_STMT: RETURN . EXP '$' $@27 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 51


state 31

   42 WHILE_STMT: WHILE . $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    $default  reduce using rule 39 ($@11)

    $@11  go to state 52


state 32

   47 IF_STMT: IF . $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 43 ($@14)

    $@14  go to state 53


state 33

   38 ASSIGN_STMT: ID . EQ EXP '$' $@10 STMTS
   58 FUNC_CALL: ID . $@22 '(' ARGS_IN ')' '$' $@23 STMTS
   62          | ID . EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    EQ  shift, and go to state 54

    $default  reduce using rule 56 ($@22)

    $@22  go to state 55


state 34

   23 STMTS: FUNC_CALL .

    $default  reduce using rule 23 (STMTS)


state 35

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' STMTS . '}' $@4 PROGRAM

    '}'  shift, and go to state 56


state 36

   19 STMTS: DECLARE_STMT .

    $default  reduce using rule 19 (STMTS)


state 37

   20 STMTS: ASSIGN_STMT .

    $default  reduce using rule 20 (STMTS)


state 38

   21 STMTS: WHILE_STMT .

    $default  reduce using rule 21 (STMTS)


state 39

   22 STMTS: IF_STMT .

    $default  reduce using rule 22 (STMTS)


state 40

   24 STMTS: RETURN_STMT .

    $default  reduce using rule 24 (STMTS)


state 41

   13 PARAMS: THREE_ID THREE_ID_COMMA ',' VTYPE ID .
   18 THREE_ID_COMMA: ',' VTYPE ID .

    ','       reduce using rule 18 (THREE_ID_COMMA)
    $default  reduce using rule 13 (PARAMS)


state 42

   14 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE . ID

    ID  shift, and go to state 57


state 43

   31 DECLARE_STMT: CHAR ID . $@7 IDS '$' STMTS
   33             | CHAR ID . EQ EXP $@8 '$' STMTS

    EQ  shift, and go to state 58

    $default  reduce using rule 30 ($@7)

    $@7  go to state 59


state 44

   27 DECLARE_STMT: INT ID . $@5 IDS '$' STMTS
   29             | INT ID . EQ EXP $@6 '$' STMTS

    EQ  shift, and go to state 60

    $default  reduce using rule 26 ($@5)

    $@5  go to state 61


state 45

   74 EXP: INTVAL .

    $default  reduce using rule 74 (EXP)


state 46

   82 EXP: char_val .

    $default  reduce using rule 82 (EXP)


state 47

   84 EXP: '-' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 62


state 48

   80 EXP: NOT . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 63


state 49

   81 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 64


state 50

   83 EXP: ID .

    $default  reduce using rule 83 (EXP)


state 51

   69 RETURN_STMT: RETURN EXP . '$' $@27 STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '$'       shift, and go to state 74


state 52

   42 WHILE_STMT: WHILE $@11 . '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    '('  shift, and go to state 75


state 53

   47 IF_STMT: IF $@14 . '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    '('  shift, and go to state 76


state 54

   38 ASSIGN_STMT: ID EQ . EXP '$' $@10 STMTS
   62 FUNC_CALL: ID EQ . ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 77

    EXP  go to state 78


state 55

   58 FUNC_CALL: ID $@22 . '(' ARGS_IN ')' '$' $@23 STMTS

    '('  shift, and go to state 79


state 56

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' STMTS '}' . $@4 PROGRAM

    $default  reduce using rule 5 ($@4)

    $@4  go to state 80


state 57

   14 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID .

    $default  reduce using rule 14 (PARAMS)


state 58

   33 DECLARE_STMT: CHAR ID EQ . EXP $@8 '$' STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 81


state 59

   31 DECLARE_STMT: CHAR ID $@7 . IDS '$' STMTS

    ','  shift, and go to state 82

    $default  reduce using rule 34 (IDS)

    IDS  go to state 83


state 60

   29 DECLARE_STMT: INT ID EQ . EXP $@6 '$' STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 84


state 61

   27 DECLARE_STMT: INT ID $@5 . IDS '$' STMTS

    ','  shift, and go to state 82

    $default  reduce using rule 34 (IDS)

    IDS  go to state 85


state 62

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP
   84    | '-' EXP .

    $default  reduce using rule 84 (EXP)


state 63

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP
   80    | NOT EXP .

    $default  reduce using rule 80 (EXP)


state 64

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP
   81    | '(' EXP . ')'

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    ')'       shift, and go to state 86


state 65

   76 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 87


state 66

   75 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 88


state 67

   77 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 89


state 68

   79 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 90


state 69

   78 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 91


state 70

   71 EXP: EXP ISNOTEQ . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 92


state 71

   70 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 93


state 72

   72 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 94


state 73

   73 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 95


state 74

   69 RETURN_STMT: RETURN EXP '$' . $@27 STMTS

    $default  reduce using rule 68 ($@27)

    $@27  go to state 96


state 75

   42 WHILE_STMT: WHILE $@11 '(' . EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 97


state 76

   47 IF_STMT: IF $@14 '(' . EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 98


state 77

   62 FUNC_CALL: ID EQ ID . $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS
   83 EXP: ID .

    '('       reduce using rule 59 ($@24)
    $default  reduce using rule 83 (EXP)

    $@24  go to state 99


state 78

   38 ASSIGN_STMT: ID EQ EXP . '$' $@10 STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '$'       shift, and go to state 100


state 79

   58 FUNC_CALL: ID $@22 '(' . ARGS_IN ')' '$' $@23 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    $default  reduce using rule 63 (ARGS_IN)

    EXP      go to state 101
    ARGS_IN  go to state 102


state 80

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 . PROGRAM

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 7 (PROGRAM)

    FTYPE    go to state 6
    PROGRAM  go to state 103


state 81

   33 DECLARE_STMT: CHAR ID EQ EXP . $@8 '$' STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 32 ($@8)

    $@8  go to state 104


state 82

   36 IDS: ',' . ID $@9 IDS

    ID  shift, and go to state 105


state 83

   31 DECLARE_STMT: CHAR ID $@7 IDS . '$' STMTS

    '$'  shift, and go to state 106


state 84

   29 DECLARE_STMT: INT ID EQ EXP . $@6 '$' STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 28 ($@6)

    $@6  go to state 107


state 85

   27 DECLARE_STMT: INT ID $@5 IDS . '$' STMTS

    '$'  shift, and go to state 108


state 86

   81 EXP: '(' EXP ')' .

    $default  reduce using rule 81 (EXP)


state 87

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   76    | EXP COND_OR EXP .
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 76 (EXP)


state 88

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   75    | EXP COND_AND EXP .
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    LOG_OR   shift, and go to state 67
    LOG_XOR  shift, and go to state 68
    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73

    $default  reduce using rule 75 (EXP)


state 89

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   77    | EXP LOG_OR EXP .
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    LOG_XOR  shift, and go to state 68
    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73

    $default  reduce using rule 77 (EXP)


state 90

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP
   79    | EXP LOG_XOR EXP .

    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73

    $default  reduce using rule 79 (EXP)


state 91

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   78    | EXP LOG_AND EXP .
   79    | EXP . LOG_XOR EXP

    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73

    $default  reduce using rule 78 (EXP)


state 92

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   71    | EXP ISNOTEQ EXP .
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 71 (EXP)


state 93

   70 EXP: EXP . ISEQ EXP
   70    | EXP ISEQ EXP .
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 70 (EXP)


state 94

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   72    | EXP '+' EXP .
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    $default  reduce using rule 72 (EXP)


state 95

   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   73    | EXP '-' EXP .
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    $default  reduce using rule 73 (EXP)


state 96

   69 RETURN_STMT: RETURN EXP '$' $@27 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 109
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 97

   42 WHILE_STMT: WHILE $@11 '(' EXP . ')' $@12 '{' STMTS '}' $@13 STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    ')'       shift, and go to state 110


state 98

   47 IF_STMT: IF $@14 '(' EXP . ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    ')'       shift, and go to state 111


state 99

   62 FUNC_CALL: ID EQ ID $@24 . '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    '('  shift, and go to state 112


state 100

   38 ASSIGN_STMT: ID EQ EXP '$' . $@10 STMTS

    $default  reduce using rule 37 ($@10)

    $@10  go to state 113


state 101

   64 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   65        | EXP . ',' EXP ',' EXP
   66        | EXP . ',' EXP
   67        | EXP .
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    ','       shift, and go to state 114
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 67 (ARGS_IN)


state 102

   58 FUNC_CALL: ID $@22 '(' ARGS_IN . ')' '$' $@23 STMTS

    ')'  shift, and go to state 115


state 103

    6 PROGRAM: FTYPE ID $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM .

    $default  reduce using rule 6 (PROGRAM)


state 104

   33 DECLARE_STMT: CHAR ID EQ EXP $@8 . '$' STMTS

    '$'  shift, and go to state 116


state 105

   36 IDS: ',' ID . $@9 IDS

    $default  reduce using rule 35 ($@9)

    $@9  go to state 117


state 106

   31 DECLARE_STMT: CHAR ID $@7 IDS '$' . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 118
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 107

   29 DECLARE_STMT: INT ID EQ EXP $@6 . '$' STMTS

    '$'  shift, and go to state 119


state 108

   27 DECLARE_STMT: INT ID $@5 IDS '$' . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 120
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 109

   69 RETURN_STMT: RETURN EXP '$' $@27 STMTS .

    $default  reduce using rule 69 (RETURN_STMT)


state 110

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' . $@12 '{' STMTS '}' $@13 STMTS

    $default  reduce using rule 40 ($@12)

    $@12  go to state 121


state 111

   47 IF_STMT: IF $@14 '(' EXP ')' . $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 44 ($@15)

    $@15  go to state 122


state 112

   62 FUNC_CALL: ID EQ ID $@24 '(' . ARGS_IN ')' '$' $@25 $@26 STMTS

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    $default  reduce using rule 63 (ARGS_IN)

    EXP      go to state 101
    ARGS_IN  go to state 123


state 113

   38 ASSIGN_STMT: ID EQ EXP '$' $@10 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 124
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 114

   64 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   65        | EXP ',' . EXP ',' EXP
   66        | EXP ',' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 125


state 115

   58 FUNC_CALL: ID $@22 '(' ARGS_IN ')' . '$' $@23 STMTS

    '$'  shift, and go to state 126


state 116

   33 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 127
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 117

   36 IDS: ',' ID $@9 . IDS

    ','  shift, and go to state 82

    $default  reduce using rule 34 (IDS)

    IDS  go to state 128


state 118

   31 DECLARE_STMT: CHAR ID $@7 IDS '$' STMTS .

    $default  reduce using rule 31 (DECLARE_STMT)


state 119

   29 DECLARE_STMT: INT ID EQ EXP $@6 '$' . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 129
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 120

   27 DECLARE_STMT: INT ID $@5 IDS '$' STMTS .

    $default  reduce using rule 27 (DECLARE_STMT)


state 121

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 . '{' STMTS '}' $@13 STMTS

    '{'  shift, and go to state 130


state 122

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 . '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    '{'  shift, and go to state 131


state 123

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN . ')' '$' $@25 $@26 STMTS

    ')'  shift, and go to state 132


state 124

   38 ASSIGN_STMT: ID EQ EXP '$' $@10 STMTS .

    $default  reduce using rule 38 (ASSIGN_STMT)


state 125

   64 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   65        | EXP ',' EXP . ',' EXP
   66        | EXP ',' EXP .
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    ','       shift, and go to state 133
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 66 (ARGS_IN)


state 126

   58 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' . $@23 STMTS

    $default  reduce using rule 57 ($@23)

    $@23  go to state 134


state 127

   33 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' STMTS .

    $default  reduce using rule 33 (DECLARE_STMT)


state 128

   36 IDS: ',' ID $@9 IDS .

    $default  reduce using rule 36 (IDS)


state 129

   29 DECLARE_STMT: INT ID EQ EXP $@6 '$' STMTS .

    $default  reduce using rule 29 (DECLARE_STMT)


state 130

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' . STMTS '}' $@13 STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 135
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 131

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' . STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 136
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 132

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' . '$' $@25 $@26 STMTS

    '$'  shift, and go to state 137


state 133

   64 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   65        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 138


state 134

   58 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 139
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 135

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS . '}' $@13 STMTS

    '}'  shift, and go to state 140


state 136

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS . '}' $@16 ELSEIF_STMT $@17 STMTS

    '}'  shift, and go to state 141


state 137

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' . $@25 $@26 STMTS

    $default  reduce using rule 60 ($@25)

    $@25  go to state 142


state 138

   64 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   65        | EXP ',' EXP ',' EXP .
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    ','       shift, and go to state 143
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 65 (ARGS_IN)


state 139

   58 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 STMTS .

    $default  reduce using rule 58 (FUNC_CALL)


state 140

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' . $@13 STMTS

    $default  reduce using rule 41 ($@13)

    $@13  go to state 144


state 141

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' . $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 45 ($@16)

    $@16  go to state 145


state 142

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 . $@26 STMTS

    $default  reduce using rule 61 ($@26)

    $@26  go to state 146


state 143

   64 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 147


state 144

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 148
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 145

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 . ELSEIF_STMT $@17 STMTS

    ELSE    shift, and go to state 149
    ELSEIF  shift, and go to state 150

    $default  reduce using rule 55 (ELSE_STMT)

    ELSEIF_STMT  go to state 151
    ELSE_STMT    go to state 152


state 146

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 153
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 147

   64 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73

    $default  reduce using rule 64 (ARGS_IN)


state 148

   42 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS .

    $default  reduce using rule 42 (WHILE_STMT)


state 149

   54 ELSE_STMT: ELSE . $@21 '{' STMTS '}'

    $default  reduce using rule 53 ($@21)

    $@21  go to state 154


state 150

   51 ELSEIF_STMT: ELSEIF . $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    $default  reduce using rule 48 ($@18)

    $@18  go to state 155


state 151

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT . $@17 STMTS

    $default  reduce using rule 46 ($@17)

    $@17  go to state 156


state 152

   52 ELSEIF_STMT: ELSE_STMT .

    $default  reduce using rule 52 (ELSEIF_STMT)


state 153

   62 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS .

    $default  reduce using rule 62 (FUNC_CALL)


state 154

   54 ELSE_STMT: ELSE $@21 . '{' STMTS '}'

    '{'  shift, and go to state 157


state 155

   51 ELSEIF_STMT: ELSEIF $@18 . '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    '('  shift, and go to state 158


state 156

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 . STMTS

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 159
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 157

   54 ELSE_STMT: ELSE $@21 '{' . STMTS '}'

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 160
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 158

   51 ELSEIF_STMT: ELSEIF $@18 '(' . EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    INTVAL    shift, and go to state 45
    char_val  shift, and go to state 46
    '-'       shift, and go to state 47
    NOT       shift, and go to state 48
    '('       shift, and go to state 49
    ID        shift, and go to state 50

    EXP  go to state 161


state 159

   47 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS .

    $default  reduce using rule 47 (IF_STMT)


state 160

   54 ELSE_STMT: ELSE $@21 '{' STMTS . '}'

    '}'  shift, and go to state 162


state 161

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP . ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT
   70 EXP: EXP . ISEQ EXP
   71    | EXP . ISNOTEQ EXP
   72    | EXP . '+' EXP
   73    | EXP . '-' EXP
   75    | EXP . COND_AND EXP
   76    | EXP . COND_OR EXP
   77    | EXP . LOG_OR EXP
   78    | EXP . LOG_AND EXP
   79    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    ')'       shift, and go to state 163


state 162

   54 ELSE_STMT: ELSE $@21 '{' STMTS '}' .

    $default  reduce using rule 54 (ELSE_STMT)


state 163

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' . $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    $default  reduce using rule 49 ($@19)

    $@19  go to state 164


state 164

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 . '{' STMTS '}' $@20 ELSEIF_STMT

    '{'  shift, and go to state 165


state 165

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' . STMTS '}' $@20 ELSEIF_STMT

    CHAR    shift, and go to state 28
    INT     shift, and go to state 29
    RETURN  shift, and go to state 30
    WHILE   shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    $default  reduce using rule 25 (STMTS)

    FUNC_CALL     go to state 34
    STMTS         go to state 166
    DECLARE_STMT  go to state 36
    ASSIGN_STMT   go to state 37
    WHILE_STMT    go to state 38
    IF_STMT       go to state 39
    RETURN_STMT   go to state 40


state 166

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS . '}' $@20 ELSEIF_STMT

    '}'  shift, and go to state 167


state 167

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' . $@20 ELSEIF_STMT

    $default  reduce using rule 50 ($@20)

    $@20  go to state 168


state 168

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 . ELSEIF_STMT

    ELSE    shift, and go to state 149
    ELSEIF  shift, and go to state 150

    $default  reduce using rule 55 (ELSE_STMT)

    ELSEIF_STMT  go to state 169
    ELSE_STMT    go to state 152


state 169

   51 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT .

    $default  reduce using rule 51 (ELSEIF_STMT)
