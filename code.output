Terminals unused in grammar

   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR
   NUM


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM
    5        | /* empty */

    6 FTYPE: VOID
    7      | INT

    8 PARAMS: /* empty */
    9       | VTYPE ID
   10       | VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID
   12       | VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

   13 VTYPE: CHAR
   14      | INT

   15 STMTS: DECLARE_STMT
   16      | ASSIGN_STMT
   17      | WHILE_STMT
   18      | IF_STMT
   19      | FUNC_CALL
   20      | RETURN_STMT
   21      | /* empty */

   22 $@4: /* empty */

   23 DECLARE_STMT: INT ID $@4 IDS '$' STMTS

   24 $@5: /* empty */

   25 DECLARE_STMT: INT ID EQ EXP $@5 '$' STMTS

   26 $@6: /* empty */

   27 DECLARE_STMT: CHAR ID $@6 IDS '$' STMTS

   28 $@7: /* empty */

   29 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' STMTS

   30 IDS: /* empty */

   31 $@8: /* empty */

   32 IDS: ',' ID $@8 IDS

   33 $@9: /* empty */

   34 ASSIGN_STMT: ID EQ EXP '$' $@9 STMTS

   35 $@10: /* empty */

   36 $@11: /* empty */

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS

   38 $@12: /* empty */

   39 $@13: /* empty */

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

   41 $@14: /* empty */

   42 $@15: /* empty */

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF
   44            | /* empty */

   45 $@16: /* empty */

   46 ELSE_STMT: ELSE $@16 '{' STMTS '}'
   47          | /* empty */

   48 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   49 ARGS_IN: /* empty */
   50        | EXP ',' EXP ',' EXP ',' EXP
   51        | EXP ',' EXP ',' EXP
   52        | EXP ',' EXP
   53        | EXP

   54 RETURN_STMT: RETURN EXP '$' STMTS

   55 EXP: EXP ISEQ EXP
   56    | EXP ISNOTEQ EXP
   57    | EXP '+' EXP
   58    | EXP '-' EXP
   59    | EXP '*' EXP
   60    | EXP '/' EXP
   61    | INTVAL
   62    | EXP COND_AND EXP
   63    | EXP COND_OR EXP
   64    | EXP LOG_OR EXP
   65    | EXP LOG_AND EXP
   66    | EXP LOG_XOR EXP
   67    | NOT EXP
   68    | '(' EXP ')'
   69    | char_val
   70    | ID
   71    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 23 25 27 29 34 48 54
'(' (40) 4 37 40 43 48 68
')' (41) 4 37 40 43 48 68
'*' (42) 59
'+' (43) 57
',' (44) 10 11 12 32 50 51 52
'-' (45) 58 71
'/' (47) 60
'[' (91)
']' (93)
'{' (123) 4 37 40 43 46
'}' (125) 4 37 40 43 46
error (256)
INTVAL (258) 61
char_val (259) 29 69
COND_OR (260) 63
COND_AND (261) 62
LOG_OR (262) 64
LOG_XOR (263) 66
LOG_AND (264) 65
ISNOTEQ (265) 56
ISEQ (266) 55
ISHIGHERANDEQ (267)
ISHIGHER (268)
ISLOWERANDEQ (269)
ISLOWER (270)
NOT (271) 67
VALUE_ID (272)
EQ (273) 25 29 34
MULTI_COMMENT (274)
COMMENT (275)
CHAR (276) 13 27 29
INT (277) 7 14 23 25
CONTINUE (278)
BREAK (279)
RETURN (280) 54
MAIN (281)
FOR (282)
VOID (283) 6
ELSE (284) 46
ELSEIF (285) 43
WHILE (286) 37
IF (287) 40
NUM (288)
ID (289) 4 9 10 11 12 23 25 27 29 32 34 48 70


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
EXP (48)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right:
    25 34 37 40 43 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66
    67 68 71
VTYPE (49)
    on left: 13 14, on right: 9 10 11 12
PARAMS (50)
    on left: 8 9 10 11 12, on right: 4
ARGS_IN (51)
    on left: 49 50 51 52 53, on right: 48
PROGRAM (52)
    on left: 4 5, on right: 0 4
$@1 (53)
    on left: 1, on right: 4
$@2 (54)
    on left: 2, on right: 4
$@3 (55)
    on left: 3, on right: 4
FTYPE (56)
    on left: 6 7, on right: 4
STMTS (57)
    on left: 15 16 17 18 19 20 21, on right: 4 23 25 27 29 34 37 40
    43 46 48 54
DECLARE_STMT (58)
    on left: 23 25 27 29, on right: 15
$@4 (59)
    on left: 22, on right: 23
$@5 (60)
    on left: 24, on right: 25
$@6 (61)
    on left: 26, on right: 27
$@7 (62)
    on left: 28, on right: 29
IDS (63)
    on left: 30 32, on right: 23 27 32
$@8 (64)
    on left: 31, on right: 32
ASSIGN_STMT (65)
    on left: 34, on right: 16
$@9 (66)
    on left: 33, on right: 34
WHILE_STMT (67)
    on left: 37, on right: 17
$@10 (68)
    on left: 35, on right: 37
$@11 (69)
    on left: 36, on right: 37
IF_STMT (70)
    on left: 40, on right: 18
$@12 (71)
    on left: 38, on right: 40
$@13 (72)
    on left: 39, on right: 40
ELSEIF_STMT (73)
    on left: 43 44, on right: 40
$@14 (74)
    on left: 41, on right: 43
$@15 (75)
    on left: 42, on right: 43
ELSE_STMT (76)
    on left: 46 47, on right: 40
$@16 (77)
    on left: 45, on right: 46
FUNC_CALL (78)
    on left: 48, on right: 19
RETURN_STMT (79)
    on left: 54, on right: 20


state 0

    0 $accept: . PROGRAM $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 3
    FTYPE    go to state 4


state 1

    7 FTYPE: INT .

    $default  reduce using rule 7 (FTYPE)


state 2

    6 FTYPE: VOID .

    $default  reduce using rule 6 (FTYPE)


state 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


state 4

    4 PROGRAM: FTYPE . ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    ID  shift, and go to state 6


state 5

    0 $accept: PROGRAM $end .

    $default  accept


state 6

    4 PROGRAM: FTYPE ID . $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


state 7

    4 PROGRAM: FTYPE ID $@1 . '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    '('  shift, and go to state 8


state 8

    4 PROGRAM: FTYPE ID $@1 '(' . PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 8 (PARAMS)

    VTYPE   go to state 11
    PARAMS  go to state 12


state 9

   13 VTYPE: CHAR .

    $default  reduce using rule 13 (VTYPE)


state 10

   14 VTYPE: INT .

    $default  reduce using rule 14 (VTYPE)


state 11

    9 PARAMS: VTYPE . ID
   10       | VTYPE . ID ',' VTYPE ID
   11       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID
   12       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 13


state 12

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS . $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 14


state 13

    9 PARAMS: VTYPE ID .
   10       | VTYPE ID . ',' VTYPE ID
   11       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID
   12       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 15

    $default  reduce using rule 9 (PARAMS)


state 14

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 . ')' '{' STMTS '}' $@3 PROGRAM

    ')'  shift, and go to state 16


state 15

   10 PARAMS: VTYPE ID ',' . VTYPE ID
   11       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID
   12       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 17


state 16

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' . '{' STMTS '}' $@3 PROGRAM

    '{'  shift, and go to state 18


state 17

   10 PARAMS: VTYPE ID ',' VTYPE . ID
   11       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID
   12       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 19


state 18

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' . STMTS '}' $@3 PROGRAM

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 26
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 19

   10 PARAMS: VTYPE ID ',' VTYPE ID .
   11       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID
   12       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 33

    $default  reduce using rule 10 (PARAMS)


state 20

   27 DECLARE_STMT: CHAR . ID $@6 IDS '$' STMTS
   29             | CHAR . ID EQ char_val $@7 '$' STMTS

    ID  shift, and go to state 34


state 21

   23 DECLARE_STMT: INT . ID $@4 IDS '$' STMTS
   25             | INT . ID EQ EXP $@5 '$' STMTS

    ID  shift, and go to state 35


state 22

   54 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 42


state 23

   37 WHILE_STMT: WHILE . $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS

    $default  reduce using rule 35 ($@10)

    $@10  go to state 43


state 24

   40 IF_STMT: IF . $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    $default  reduce using rule 38 ($@12)

    $@12  go to state 44


state 25

   34 ASSIGN_STMT: ID . EQ EXP '$' $@9 STMTS
   48 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 45
    EQ   shift, and go to state 46


state 26

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS . '}' $@3 PROGRAM

    '}'  shift, and go to state 47


state 27

   15 STMTS: DECLARE_STMT .

    $default  reduce using rule 15 (STMTS)


state 28

   16 STMTS: ASSIGN_STMT .

    $default  reduce using rule 16 (STMTS)


state 29

   17 STMTS: WHILE_STMT .

    $default  reduce using rule 17 (STMTS)


state 30

   18 STMTS: IF_STMT .

    $default  reduce using rule 18 (STMTS)


state 31

   19 STMTS: FUNC_CALL .

    $default  reduce using rule 19 (STMTS)


state 32

   20 STMTS: RETURN_STMT .

    $default  reduce using rule 20 (STMTS)


state 33

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' . VTYPE ID
   12       | VTYPE ID ',' VTYPE ID ',' . VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 48


state 34

   27 DECLARE_STMT: CHAR ID . $@6 IDS '$' STMTS
   29             | CHAR ID . EQ char_val $@7 '$' STMTS

    EQ  shift, and go to state 49

    $default  reduce using rule 26 ($@6)

    $@6  go to state 50


state 35

   23 DECLARE_STMT: INT ID . $@4 IDS '$' STMTS
   25             | INT ID . EQ EXP $@5 '$' STMTS

    EQ  shift, and go to state 51

    $default  reduce using rule 22 ($@4)

    $@4  go to state 52


state 36

   61 EXP: INTVAL .

    $default  reduce using rule 61 (EXP)


state 37

   69 EXP: char_val .

    $default  reduce using rule 69 (EXP)


state 38

   71 EXP: '-' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 53


state 39

   67 EXP: NOT . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 54


state 40

   68 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 55


state 41

   70 EXP: ID .

    $default  reduce using rule 70 (EXP)


state 42

   54 RETURN_STMT: RETURN EXP . '$' STMTS
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    '$'       shift, and go to state 67


state 43

   37 WHILE_STMT: WHILE $@10 . '(' EXP ')' '{' STMTS '}' $@11 STMTS

    '('  shift, and go to state 68


state 44

   40 IF_STMT: IF $@12 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '('  shift, and go to state 69


state 45

   48 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    $default  reduce using rule 49 (ARGS_IN)

    EXP      go to state 70
    ARGS_IN  go to state 71


state 46

   34 ASSIGN_STMT: ID EQ . EXP '$' $@9 STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 72


state 47

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' . $@3 PROGRAM

    $default  reduce using rule 3 ($@3)

    $@3  go to state 73


state 48

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE . ID
   12       | VTYPE ID ',' VTYPE ID ',' VTYPE . ID ',' VTYPE ID

    ID  shift, and go to state 74


state 49

   29 DECLARE_STMT: CHAR ID EQ . char_val $@7 '$' STMTS

    char_val  shift, and go to state 75


state 50

   27 DECLARE_STMT: CHAR ID $@6 . IDS '$' STMTS

    ','  shift, and go to state 76

    $default  reduce using rule 30 (IDS)

    IDS  go to state 77


state 51

   25 DECLARE_STMT: INT ID EQ . EXP $@5 '$' STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 78


state 52

   23 DECLARE_STMT: INT ID $@4 . IDS '$' STMTS

    ','  shift, and go to state 76

    $default  reduce using rule 30 (IDS)

    IDS  go to state 79


state 53

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP
   71    | '-' EXP .

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 71 (EXP)


state 54

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP
   67    | NOT EXP .

    $default  reduce using rule 67 (EXP)


state 55

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP
   68    | '(' EXP . ')'

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    ')'       shift, and go to state 80


state 56

   63 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 81


state 57

   62 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 82


state 58

   64 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 83


state 59

   66 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 84


state 60

   65 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 85


state 61

   56 EXP: EXP ISNOTEQ . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 86


state 62

   55 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 87


state 63

   57 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 88


state 64

   58 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 89


state 65

   59 EXP: EXP '*' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 90


state 66

   60 EXP: EXP '/' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 91


state 67

   54 RETURN_STMT: RETURN EXP '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 92
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 68

   37 WHILE_STMT: WHILE $@10 '(' . EXP ')' '{' STMTS '}' $@11 STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 93


state 69

   40 IF_STMT: IF $@12 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 94


state 70

   50 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   51        | EXP . ',' EXP ',' EXP
   52        | EXP . ',' EXP
   53        | EXP .
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    ','       shift, and go to state 95
    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 53 (ARGS_IN)


state 71

   48 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 96


state 72

   34 ASSIGN_STMT: ID EQ EXP . '$' $@9 STMTS
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    '$'       shift, and go to state 97


state 73

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 . PROGRAM

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 98
    FTYPE    go to state 4


state 74

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID .
   12       | VTYPE ID ',' VTYPE ID ',' VTYPE ID . ',' VTYPE ID

    ','  shift, and go to state 99

    $default  reduce using rule 11 (PARAMS)


state 75

   29 DECLARE_STMT: CHAR ID EQ char_val . $@7 '$' STMTS

    $default  reduce using rule 28 ($@7)

    $@7  go to state 100


state 76

   32 IDS: ',' . ID $@8 IDS

    ID  shift, and go to state 101


state 77

   27 DECLARE_STMT: CHAR ID $@6 IDS . '$' STMTS

    '$'  shift, and go to state 102


state 78

   25 DECLARE_STMT: INT ID EQ EXP . $@5 '$' STMTS
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 24 ($@5)

    $@5  go to state 103


state 79

   23 DECLARE_STMT: INT ID $@4 IDS . '$' STMTS

    '$'  shift, and go to state 104


state 80

   68 EXP: '(' EXP ')' .

    $default  reduce using rule 68 (EXP)


state 81

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   63    | EXP COND_OR EXP .
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 63 (EXP)


state 82

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   62    | EXP COND_AND EXP .
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    LOG_OR   shift, and go to state 58
    LOG_XOR  shift, and go to state 59
    LOG_AND  shift, and go to state 60
    ISNOTEQ  shift, and go to state 61
    ISEQ     shift, and go to state 62
    '+'      shift, and go to state 63
    '-'      shift, and go to state 64
    '*'      shift, and go to state 65
    '/'      shift, and go to state 66

    $default  reduce using rule 62 (EXP)


state 83

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   64    | EXP LOG_OR EXP .
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    LOG_XOR  shift, and go to state 59
    LOG_AND  shift, and go to state 60
    ISNOTEQ  shift, and go to state 61
    ISEQ     shift, and go to state 62
    '+'      shift, and go to state 63
    '-'      shift, and go to state 64
    '*'      shift, and go to state 65
    '/'      shift, and go to state 66

    $default  reduce using rule 64 (EXP)


state 84

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP
   66    | EXP LOG_XOR EXP .

    LOG_AND  shift, and go to state 60
    ISNOTEQ  shift, and go to state 61
    ISEQ     shift, and go to state 62
    '+'      shift, and go to state 63
    '-'      shift, and go to state 64
    '*'      shift, and go to state 65
    '/'      shift, and go to state 66

    $default  reduce using rule 66 (EXP)


state 85

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   65    | EXP LOG_AND EXP .
   66    | EXP . LOG_XOR EXP

    ISNOTEQ  shift, and go to state 61
    ISEQ     shift, and go to state 62
    '+'      shift, and go to state 63
    '-'      shift, and go to state 64
    '*'      shift, and go to state 65
    '/'      shift, and go to state 66

    $default  reduce using rule 65 (EXP)


state 86

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   56    | EXP ISNOTEQ EXP .
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 56 (EXP)


state 87

   55 EXP: EXP . ISEQ EXP
   55    | EXP ISEQ EXP .
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 55 (EXP)


state 88

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   57    | EXP '+' EXP .
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 57 (EXP)


state 89

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   58    | EXP '-' EXP .
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 58 (EXP)


state 90

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   59    | EXP '*' EXP .
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    $default  reduce using rule 59 (EXP)


state 91

   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   60    | EXP '/' EXP .
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    $default  reduce using rule 60 (EXP)


state 92

   54 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 54 (RETURN_STMT)


state 93

   37 WHILE_STMT: WHILE $@10 '(' EXP . ')' '{' STMTS '}' $@11 STMTS
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    ')'       shift, and go to state 105


state 94

   40 IF_STMT: IF $@12 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    ')'       shift, and go to state 106


state 95

   50 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   51        | EXP ',' . EXP ',' EXP
   52        | EXP ',' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 107


state 96

   48 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 108


state 97

   34 ASSIGN_STMT: ID EQ EXP '$' . $@9 STMTS

    $default  reduce using rule 33 ($@9)

    $@9  go to state 109


state 98

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM .

    $default  reduce using rule 4 (PROGRAM)


state 99

   12 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 110


state 100

   29 DECLARE_STMT: CHAR ID EQ char_val $@7 . '$' STMTS

    '$'  shift, and go to state 111


state 101

   32 IDS: ',' ID . $@8 IDS

    $default  reduce using rule 31 ($@8)

    $@8  go to state 112


state 102

   27 DECLARE_STMT: CHAR ID $@6 IDS '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 113
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 103

   25 DECLARE_STMT: INT ID EQ EXP $@5 . '$' STMTS

    '$'  shift, and go to state 114


state 104

   23 DECLARE_STMT: INT ID $@4 IDS '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 115
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 105

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' . '{' STMTS '}' $@11 STMTS

    '{'  shift, and go to state 116


state 106

   40 IF_STMT: IF $@12 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '{'  shift, and go to state 117


state 107

   50 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   51        | EXP ',' EXP . ',' EXP
   52        | EXP ',' EXP .
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    ','       shift, and go to state 118
    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 52 (ARGS_IN)


state 108

   48 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 119
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 109

   34 ASSIGN_STMT: ID EQ EXP '$' $@9 . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 120
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 110

   12 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE . ID

    ID  shift, and go to state 121


state 111

   29 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 122
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 112

   32 IDS: ',' ID $@8 . IDS

    ','  shift, and go to state 76

    $default  reduce using rule 30 (IDS)

    IDS  go to state 123


state 113

   27 DECLARE_STMT: CHAR ID $@6 IDS '$' STMTS .

    $default  reduce using rule 27 (DECLARE_STMT)


state 114

   25 DECLARE_STMT: INT ID EQ EXP $@5 '$' . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 124
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 115

   23 DECLARE_STMT: INT ID $@4 IDS '$' STMTS .

    $default  reduce using rule 23 (DECLARE_STMT)


state 116

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' . STMTS '}' $@11 STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 125
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 117

   40 IF_STMT: IF $@12 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 126
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 118

   50 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   51        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 127


state 119

   48 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 48 (FUNC_CALL)


state 120

   34 ASSIGN_STMT: ID EQ EXP '$' $@9 STMTS .

    $default  reduce using rule 34 (ASSIGN_STMT)


state 121

   12 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID .

    $default  reduce using rule 12 (PARAMS)


state 122

   29 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' STMTS .

    $default  reduce using rule 29 (DECLARE_STMT)


state 123

   32 IDS: ',' ID $@8 IDS .

    $default  reduce using rule 32 (IDS)


state 124

   25 DECLARE_STMT: INT ID EQ EXP $@5 '$' STMTS .

    $default  reduce using rule 25 (DECLARE_STMT)


state 125

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS . '}' $@11 STMTS

    '}'  shift, and go to state 128


state 126

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '}'  shift, and go to state 129


state 127

   50 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   51        | EXP ',' EXP ',' EXP .
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    ','       shift, and go to state 130
    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 51 (ARGS_IN)


state 128

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' . $@11 STMTS

    $default  reduce using rule 36 ($@11)

    $@11  go to state 131


state 129

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@13 STMTS

    ELSEIF  shift, and go to state 132

    $default  reduce using rule 44 (ELSEIF_STMT)

    ELSEIF_STMT  go to state 133


state 130

   50 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 134


state 131

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 135
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 132

   43 ELSEIF_STMT: ELSEIF . $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF

    $default  reduce using rule 41 ($@14)

    $@14  go to state 136


state 133

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@13 STMTS

    ELSE  shift, and go to state 137

    $default  reduce using rule 47 (ELSE_STMT)

    ELSE_STMT  go to state 138


state 134

   50 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66

    $default  reduce using rule 50 (ARGS_IN)


state 135

   37 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS .

    $default  reduce using rule 37 (WHILE_STMT)


state 136

   43 ELSEIF_STMT: ELSEIF $@14 . '(' EXP ')' '{' STMTS '}' $@15 ELSEIF

    '('  shift, and go to state 139


state 137

   46 ELSE_STMT: ELSE . $@16 '{' STMTS '}'

    $default  reduce using rule 45 ($@16)

    $@16  go to state 140


state 138

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@13 STMTS

    $default  reduce using rule 39 ($@13)

    $@13  go to state 141


state 139

   43 ELSEIF_STMT: ELSEIF $@14 '(' . EXP ')' '{' STMTS '}' $@15 ELSEIF

    INTVAL    shift, and go to state 36
    char_val  shift, and go to state 37
    '-'       shift, and go to state 38
    NOT       shift, and go to state 39
    '('       shift, and go to state 40
    ID        shift, and go to state 41

    EXP  go to state 142


state 140

   46 ELSE_STMT: ELSE $@16 . '{' STMTS '}'

    '{'  shift, and go to state 143


state 141

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 . STMTS

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 144
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 142

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP . ')' '{' STMTS '}' $@15 ELSEIF
   55 EXP: EXP . ISEQ EXP
   56    | EXP . ISNOTEQ EXP
   57    | EXP . '+' EXP
   58    | EXP . '-' EXP
   59    | EXP . '*' EXP
   60    | EXP . '/' EXP
   62    | EXP . COND_AND EXP
   63    | EXP . COND_OR EXP
   64    | EXP . LOG_OR EXP
   65    | EXP . LOG_AND EXP
   66    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 56
    COND_AND  shift, and go to state 57
    LOG_OR    shift, and go to state 58
    LOG_XOR   shift, and go to state 59
    LOG_AND   shift, and go to state 60
    ISNOTEQ   shift, and go to state 61
    ISEQ      shift, and go to state 62
    '+'       shift, and go to state 63
    '-'       shift, and go to state 64
    '*'       shift, and go to state 65
    '/'       shift, and go to state 66
    ')'       shift, and go to state 145


state 143

   46 ELSE_STMT: ELSE $@16 '{' . STMTS '}'

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 146
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 144

   40 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS .

    $default  reduce using rule 40 (IF_STMT)


state 145

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' . '{' STMTS '}' $@15 ELSEIF

    '{'  shift, and go to state 147


state 146

   46 ELSE_STMT: ELSE $@16 '{' STMTS . '}'

    '}'  shift, and go to state 148


state 147

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' . STMTS '}' $@15 ELSEIF

    CHAR    shift, and go to state 20
    INT     shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    IF      shift, and go to state 24
    ID      shift, and go to state 25

    $default  reduce using rule 21 (STMTS)

    STMTS         go to state 149
    DECLARE_STMT  go to state 27
    ASSIGN_STMT   go to state 28
    WHILE_STMT    go to state 29
    IF_STMT       go to state 30
    FUNC_CALL     go to state 31
    RETURN_STMT   go to state 32


state 148

   46 ELSE_STMT: ELSE $@16 '{' STMTS '}' .

    $default  reduce using rule 46 (ELSE_STMT)


state 149

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS . '}' $@15 ELSEIF

    '}'  shift, and go to state 150


state 150

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' . $@15 ELSEIF

    $default  reduce using rule 42 ($@15)

    $@15  go to state 151


state 151

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 . ELSEIF

    ELSEIF  shift, and go to state 152


state 152

   43 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF .

    $default  reduce using rule 43 (ELSEIF_STMT)
