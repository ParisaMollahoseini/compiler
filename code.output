Terminals unused in grammar

   COND_OR
   COND_AND
   LOG_OR
   LOG_XOR
   LOG_AND
   ISNOTEQ
   ISEQ
   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '+'
   '*'
   '/'
   NOT
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR


Rules useless in parser due to conflicts

   23 $@4: /* empty */

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS

   25 $@5: /* empty */

   26 DECLARE_STMT: CHAR ID EQ char_val $@5 '$' STMTS


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM
    4        | ENTER

    5 FTYPE: VOID
    6      | INT

    7 PARAMS: /* empty */
    8       | VTYPE ID
    9       | VTYPE ID ',' VTYPE ID
   10       | VTYPE ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

   12 VTYPE: CHAR
   13      | INT

   14 STMTS: DECLARE_STMT
   15      | ASSIGN_STMT
   16      | WHILE_STMT
   17      | IF_STMT
   18      | FUNC_CALL
   19      | RETURN_STMT
   20      | ENTER

   21 $@3: /* empty */

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' STMTS

   23 $@4: /* empty */

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS

   25 $@5: /* empty */

   26 DECLARE_STMT: CHAR ID EQ char_val $@5 '$' STMTS

   27 IDS: /* empty */

   28 $@6: /* empty */

   29 IDS: ',' ID $@6 IDS

   30 $@7: /* empty */

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 STMTS

   32 $@8: /* empty */

   33 $@9: /* empty */

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS

   35 $@10: /* empty */

   36 $@11: /* empty */

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

   38 $@12: /* empty */

   39 $@13: /* empty */

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF
   41            | ENTER

   42 $@14: /* empty */

   43 ELSE_STMT: ELSE $@14 '{' STMTS '}'
   44          | ENTER

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   46 ARGS_IN: /* empty */
   47        | EXP ',' EXP ',' EXP ',' EXP
   48        | EXP ',' EXP ',' EXP
   49        | EXP ',' EXP
   50        | EXP

   51 RETURN_STMT: RETURN EXP '$' STMTS

   52 EXP: INTVAL
   53    | char_val
   54    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 22 24 26 31 45 51
'(' (40) 3 34 37 40 45
')' (41) 3 34 37 40 45
'*' (42)
'+' (43)
',' (44) 9 10 11 29 47 48 49
'-' (45) 54
'/' (47)
'[' (91)
']' (93)
'{' (123) 3 34 37 40 43
'}' (125) 3 34 37 40 43
error (256)
INTVAL (258) 52
ID (259) 3 8 9 10 11 22 24 26 29 31 45
char_val (260) 26 53
COND_OR (261)
COND_AND (262)
LOG_OR (263)
LOG_XOR (264)
LOG_AND (265)
ISNOTEQ (266)
ISEQ (267)
ISHIGHERANDEQ (268)
ISHIGHER (269)
ISLOWERANDEQ (270)
ISLOWER (271)
NOT (272)
ENTER (273) 4 20 41 44
VALUE_ID (274)
EQ (275) 24 26 31
MULTI_COMMENT (276)
COMMENT (277)
CHAR (278) 12 26
INT (279) 6 13 24
CONTINUE (280)
BREAK (281)
RETURN (282) 51
MAIN (283)
FOR (284)
VOID (285) 5
ELSE (286) 43
ELSEIF (287) 40
WHILE (288) 34
IF (289) 37


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
PROGRAM (48)
    on left: 3 4, on right: 0 3
$@1 (49)
    on left: 1, on right: 3
$@2 (50)
    on left: 2, on right: 3
FTYPE (51)
    on left: 5 6, on right: 3
PARAMS (52)
    on left: 7 8 9 10 11, on right: 3
VTYPE (53)
    on left: 12 13, on right: 8 9 10 11 22
STMTS (54)
    on left: 14 15 16 17 18 19 20, on right: 3 22 24 26 31 34 37 40
    43 45 51
DECLARE_STMT (55)
    on left: 22 24 26, on right: 14
$@3 (56)
    on left: 21, on right: 22
$@4 (57)
    on left: 23, on right: 24
$@5 (58)
    on left: 25, on right: 26
IDS (59)
    on left: 27 29, on right: 22 29
$@6 (60)
    on left: 28, on right: 29
ASSIGN_STMT (61)
    on left: 31, on right: 15
$@7 (62)
    on left: 30, on right: 31
WHILE_STMT (63)
    on left: 34, on right: 16
$@8 (64)
    on left: 32, on right: 34
$@9 (65)
    on left: 33, on right: 34
IF_STMT (66)
    on left: 37, on right: 17
$@10 (67)
    on left: 35, on right: 37
$@11 (68)
    on left: 36, on right: 37
ELSEIF_STMT (69)
    on left: 40 41, on right: 37
$@12 (70)
    on left: 38, on right: 40
$@13 (71)
    on left: 39, on right: 40
ELSE_STMT (72)
    on left: 43 44, on right: 37
$@14 (73)
    on left: 42, on right: 43
FUNC_CALL (74)
    on left: 45, on right: 18
ARGS_IN (75)
    on left: 46 47 48 49 50, on right: 45
RETURN_STMT (76)
    on left: 51, on right: 19
EXP (77)
    on left: 52 53 54, on right: 24 31 34 37 40 47 48 49 50 51 54


state 0

    0 $accept: . PROGRAM $end

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 4
    FTYPE    go to state 5


state 1

    4 PROGRAM: ENTER .

    $default  reduce using rule 4 (PROGRAM)


state 2

    6 FTYPE: INT .

    $default  reduce using rule 6 (FTYPE)


state 3

    5 FTYPE: VOID .

    $default  reduce using rule 5 (FTYPE)


state 4

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


state 5

    3 PROGRAM: FTYPE . ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    ID  shift, and go to state 7


state 6

    0 $accept: PROGRAM $end .

    $default  accept


state 7

    3 PROGRAM: FTYPE ID . '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    '('  shift, and go to state 8


state 8

    3 PROGRAM: FTYPE ID '(' . PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 7 (PARAMS)

    PARAMS  go to state 11
    VTYPE   go to state 12


state 9

   12 VTYPE: CHAR .

    $default  reduce using rule 12 (VTYPE)


state 10

   13 VTYPE: INT .

    $default  reduce using rule 13 (VTYPE)


state 11

    3 PROGRAM: FTYPE ID '(' PARAMS . $@1 ')' '{' STMTS '}' $@2 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 13


state 12

    8 PARAMS: VTYPE . ID
    9       | VTYPE . ID ',' VTYPE ID
   10       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 14


state 13

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 . ')' '{' STMTS '}' $@2 PROGRAM

    ')'  shift, and go to state 15


state 14

    8 PARAMS: VTYPE ID .
    9       | VTYPE ID . ',' VTYPE ID
   10       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 16

    $default  reduce using rule 8 (PARAMS)


state 15

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' . '{' STMTS '}' $@2 PROGRAM

    '{'  shift, and go to state 17


state 16

    9 PARAMS: VTYPE ID ',' . VTYPE ID
   10       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 18


state 17

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' . STMTS '}' $@2 PROGRAM

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 27
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 18

    9 PARAMS: VTYPE ID ',' VTYPE . ID
   10       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 34


state 19

   31 ASSIGN_STMT: ID . EQ EXP '$' $@7 STMTS
   45 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 35
    EQ   shift, and go to state 36


state 20

   20 STMTS: ENTER .

    $default  reduce using rule 20 (STMTS)


state 21

   12 VTYPE: CHAR .
   26 DECLARE_STMT: CHAR . ID EQ char_val $@5 '$' STMTS

    $default  reduce using rule 12 (VTYPE)


state 22

   13 VTYPE: INT .
   24 DECLARE_STMT: INT . ID EQ EXP $@4 '$' STMTS

    $default  reduce using rule 13 (VTYPE)


state 23

   51 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 40


state 24

   34 WHILE_STMT: WHILE . $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS

    $default  reduce using rule 32 ($@8)

    $@8  go to state 41


state 25

   37 IF_STMT: IF . $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    $default  reduce using rule 35 ($@10)

    $@10  go to state 42


state 26

   22 DECLARE_STMT: VTYPE . ID $@3 IDS '$' STMTS

    ID  shift, and go to state 43


state 27

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS . '}' $@2 PROGRAM

    '}'  shift, and go to state 44


state 28

   14 STMTS: DECLARE_STMT .

    $default  reduce using rule 14 (STMTS)


state 29

   15 STMTS: ASSIGN_STMT .

    $default  reduce using rule 15 (STMTS)


state 30

   16 STMTS: WHILE_STMT .

    $default  reduce using rule 16 (STMTS)


state 31

   17 STMTS: IF_STMT .

    $default  reduce using rule 17 (STMTS)


state 32

   18 STMTS: FUNC_CALL .

    $default  reduce using rule 18 (STMTS)


state 33

   19 STMTS: RETURN_STMT .

    $default  reduce using rule 19 (STMTS)


state 34

    9 PARAMS: VTYPE ID ',' VTYPE ID .
   10       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 45

    $default  reduce using rule 9 (PARAMS)


state 35

   45 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    $default  reduce using rule 46 (ARGS_IN)

    ARGS_IN  go to state 46
    EXP      go to state 47


state 36

   31 ASSIGN_STMT: ID EQ . EXP '$' $@7 STMTS

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 48


state 37

   52 EXP: INTVAL .

    $default  reduce using rule 52 (EXP)


state 38

   53 EXP: char_val .

    $default  reduce using rule 53 (EXP)


state 39

   54 EXP: '-' . EXP

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 49


state 40

   51 RETURN_STMT: RETURN EXP . '$' STMTS

    '$'  shift, and go to state 50


state 41

   34 WHILE_STMT: WHILE $@8 . '(' EXP ')' '{' STMTS '}' $@9 STMTS

    '('  shift, and go to state 51


state 42

   37 IF_STMT: IF $@10 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '('  shift, and go to state 52


state 43

   22 DECLARE_STMT: VTYPE ID . $@3 IDS '$' STMTS

    $default  reduce using rule 21 ($@3)

    $@3  go to state 53


state 44

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' . $@2 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 54


state 45

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' . VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' . VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 55


state 46

   45 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 56


state 47

   47 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   48        | EXP . ',' EXP ',' EXP
   49        | EXP . ',' EXP
   50        | EXP .

    ','  shift, and go to state 57

    $default  reduce using rule 50 (ARGS_IN)


state 48

   31 ASSIGN_STMT: ID EQ EXP . '$' $@7 STMTS

    '$'  shift, and go to state 58


state 49

   54 EXP: '-' EXP .

    $default  reduce using rule 54 (EXP)


state 50

   51 RETURN_STMT: RETURN EXP '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 59
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 51

   34 WHILE_STMT: WHILE $@8 '(' . EXP ')' '{' STMTS '}' $@9 STMTS

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 60


state 52

   37 IF_STMT: IF $@10 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 61


state 53

   22 DECLARE_STMT: VTYPE ID $@3 . IDS '$' STMTS

    ','  shift, and go to state 62

    $default  reduce using rule 27 (IDS)

    IDS  go to state 63


state 54

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 . PROGRAM

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 64
    FTYPE    go to state 5


state 55

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE . ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE . ID ',' VTYPE ID

    ID  shift, and go to state 65


state 56

   45 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 66


state 57

   47 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   48        | EXP ',' . EXP ',' EXP
   49        | EXP ',' . EXP

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 67


state 58

   31 ASSIGN_STMT: ID EQ EXP '$' . $@7 STMTS

    $default  reduce using rule 30 ($@7)

    $@7  go to state 68


state 59

   51 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 51 (RETURN_STMT)


state 60

   34 WHILE_STMT: WHILE $@8 '(' EXP . ')' '{' STMTS '}' $@9 STMTS

    ')'  shift, and go to state 69


state 61

   37 IF_STMT: IF $@10 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    ')'  shift, and go to state 70


state 62

   29 IDS: ',' . ID $@6 IDS

    ID  shift, and go to state 71


state 63

   22 DECLARE_STMT: VTYPE ID $@3 IDS . '$' STMTS

    '$'  shift, and go to state 72


state 64

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM .

    $default  reduce using rule 3 (PROGRAM)


state 65

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID .
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID . ',' VTYPE ID

    ','  shift, and go to state 73

    $default  reduce using rule 10 (PARAMS)


state 66

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 74
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 67

   47 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   48        | EXP ',' EXP . ',' EXP
   49        | EXP ',' EXP .

    ','  shift, and go to state 75

    $default  reduce using rule 49 (ARGS_IN)


state 68

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 76
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 69

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' . '{' STMTS '}' $@9 STMTS

    '{'  shift, and go to state 77


state 70

   37 IF_STMT: IF $@10 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '{'  shift, and go to state 78


state 71

   29 IDS: ',' ID . $@6 IDS

    $default  reduce using rule 28 ($@6)

    $@6  go to state 79


state 72

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 80
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 73

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 81


state 74

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 45 (FUNC_CALL)


state 75

   47 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   48        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 82


state 76

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 STMTS .

    $default  reduce using rule 31 (ASSIGN_STMT)


state 77

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' . STMTS '}' $@9 STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 83
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 78

   37 IF_STMT: IF $@10 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 84
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 79

   29 IDS: ',' ID $@6 . IDS

    ','  shift, and go to state 62

    $default  reduce using rule 27 (IDS)

    IDS  go to state 85


state 80

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' STMTS .

    $default  reduce using rule 22 (DECLARE_STMT)


state 81

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE . ID

    ID  shift, and go to state 86


state 82

   47 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   48        | EXP ',' EXP ',' EXP .

    ','  shift, and go to state 87

    $default  reduce using rule 48 (ARGS_IN)


state 83

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS . '}' $@9 STMTS

    '}'  shift, and go to state 88


state 84

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '}'  shift, and go to state 89


state 85

   29 IDS: ',' ID $@6 IDS .

    $default  reduce using rule 29 (IDS)


state 86

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID .

    $default  reduce using rule 11 (PARAMS)


state 87

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 90


state 88

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' . $@9 STMTS

    $default  reduce using rule 33 ($@9)

    $@9  go to state 91


state 89

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@11 STMTS

    ENTER   shift, and go to state 92
    ELSEIF  shift, and go to state 93

    ELSEIF_STMT  go to state 94


state 90

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .

    $default  reduce using rule 47 (ARGS_IN)


state 91

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 95
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 92

   41 ELSEIF_STMT: ENTER .

    $default  reduce using rule 41 (ELSEIF_STMT)


state 93

   40 ELSEIF_STMT: ELSEIF . $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF

    $default  reduce using rule 38 ($@12)

    $@12  go to state 96


state 94

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@11 STMTS

    ENTER  shift, and go to state 97
    ELSE   shift, and go to state 98

    ELSE_STMT  go to state 99


state 95

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS .

    $default  reduce using rule 34 (WHILE_STMT)


state 96

   40 ELSEIF_STMT: ELSEIF $@12 . '(' EXP ')' '{' STMTS '}' $@13 ELSEIF

    '('  shift, and go to state 100


state 97

   44 ELSE_STMT: ENTER .

    $default  reduce using rule 44 (ELSE_STMT)


state 98

   43 ELSE_STMT: ELSE . $@14 '{' STMTS '}'

    $default  reduce using rule 42 ($@14)

    $@14  go to state 101


state 99

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@11 STMTS

    $default  reduce using rule 36 ($@11)

    $@11  go to state 102


state 100

   40 ELSEIF_STMT: ELSEIF $@12 '(' . EXP ')' '{' STMTS '}' $@13 ELSEIF

    INTVAL    shift, and go to state 37
    char_val  shift, and go to state 38
    '-'       shift, and go to state 39

    EXP  go to state 103


state 101

   43 ELSE_STMT: ELSE $@14 . '{' STMTS '}'

    '{'  shift, and go to state 104


state 102

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 105
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 103

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP . ')' '{' STMTS '}' $@13 ELSEIF

    ')'  shift, and go to state 106


state 104

   43 ELSE_STMT: ELSE $@14 '{' . STMTS '}'

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 107
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 105

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS .

    $default  reduce using rule 37 (IF_STMT)


state 106

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' . '{' STMTS '}' $@13 ELSEIF

    '{'  shift, and go to state 108


state 107

   43 ELSE_STMT: ELSE $@14 '{' STMTS . '}'

    '}'  shift, and go to state 109


state 108

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' . STMTS '}' $@13 ELSEIF

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 110
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 109

   43 ELSE_STMT: ELSE $@14 '{' STMTS '}' .

    $default  reduce using rule 43 (ELSE_STMT)


state 110

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS . '}' $@13 ELSEIF

    '}'  shift, and go to state 111


state 111

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' . $@13 ELSEIF

    $default  reduce using rule 39 ($@13)

    $@13  go to state 112


state 112

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 . ELSEIF

    ELSEIF  shift, and go to state 113


state 113

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF .

    $default  reduce using rule 40 (ELSEIF_STMT)
