Terminals unused in grammar

   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR


Rules useless in parser due to conflicts

   23 $@4: /* empty */

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS

   25 $@5: /* empty */

   26 DECLARE_STMT: CHAR ID EQ char_val $@5 '$' STMTS


State 23 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce, 1 reduce/reduce
State 36 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 86 conflicts: 15 shift/reduce
State 113 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM
    4        | ENTER

    5 FTYPE: VOID
    6      | INT

    7 PARAMS: /* empty */
    8       | VTYPE ID
    9       | VTYPE ID ',' VTYPE ID
   10       | VTYPE ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

   12 VTYPE: CHAR
   13      | INT

   14 STMTS: DECLARE_STMT
   15      | ASSIGN_STMT
   16      | WHILE_STMT
   17      | IF_STMT
   18      | FUNC_CALL
   19      | RETURN_STMT
   20      | ENTER

   21 $@3: /* empty */

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' STMTS

   23 $@4: /* empty */

   24 DECLARE_STMT: INT ID EQ EXP $@4 '$' STMTS

   25 $@5: /* empty */

   26 DECLARE_STMT: CHAR ID EQ char_val $@5 '$' STMTS

   27 IDS: /* empty */

   28 $@6: /* empty */

   29 IDS: ',' ID $@6 IDS

   30 $@7: /* empty */

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 STMTS

   32 $@8: /* empty */

   33 $@9: /* empty */

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS

   35 $@10: /* empty */

   36 $@11: /* empty */

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

   38 $@12: /* empty */

   39 $@13: /* empty */

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF
   41            | ENTER

   42 $@14: /* empty */

   43 ELSE_STMT: ELSE $@14 '{' STMTS '}'
   44          | ENTER

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   46 ARGS_IN: /* empty */
   47        | EXP ',' EXP ',' EXP ',' EXP
   48        | EXP ',' EXP ',' EXP
   49        | EXP ',' EXP
   50        | EXP

   51 RETURN_STMT: RETURN EXP '$' STMTS

   52 EXP: EXP ISLOWER EXP
   53    | EXP ISLOWERANDEQ EXP
   54    | EXP ISHIGHER EXP
   55    | EXP ISHIGHERANDEQ EXP

   56 $@15: /* empty */

   57 EXP: EXP ISNOTEQ EXP $@15
   58    | EXP ISEQ EXP
   59    | EXP '+' EXP
   60    | EXP '-' EXP
   61    | EXP '*' EXP
   62    | EXP '/' EXP
   63    | EXP COND_AND EXP
   64    | EXP COND_OR EXP
   65    | EXP LOG_OR EXP
   66    | EXP LOG_AND EXP
   67    | EXP LOG_XOR EXP
   68    | NOT EXP
   69    | '(' EXP ')'
   70    | INTVAL
   71    | char_val
   72    | '-' EXP
   73    | /* empty */
   74    | FUNC_CALL


Terminals, with rules where they appear

$end (0) 0
'$' (36) 22 24 26 31 45 51
'(' (40) 3 34 37 40 45 69
')' (41) 3 34 37 40 45 69
'*' (42) 61
'+' (43) 59
',' (44) 9 10 11 29 47 48 49
'-' (45) 60 72
'/' (47) 62
'[' (91)
']' (93)
'{' (123) 3 34 37 40 43
'}' (125) 3 34 37 40 43
error (256)
INTVAL (258) 70
ID (259) 3 8 9 10 11 22 24 26 29 31 45
char_val (260) 26 71
COND_OR (261) 64
COND_AND (262) 63
LOG_OR (263) 65
LOG_XOR (264) 67
LOG_AND (265) 66
ISNOTEQ (266) 57
ISEQ (267) 58
ISHIGHERANDEQ (268) 55
ISHIGHER (269) 54
ISLOWERANDEQ (270) 53
ISLOWER (271) 52
NOT (272) 68
ENTER (273) 4 20 41 44
VALUE_ID (274)
EQ (275) 24 26 31
MULTI_COMMENT (276)
COMMENT (277)
CHAR (278) 12 26
INT (279) 6 13 24
CONTINUE (280)
BREAK (281)
RETURN (282) 51
MAIN (283)
FOR (284)
VOID (285) 5
ELSE (286) 43
ELSEIF (287) 40
WHILE (288) 34
IF (289) 37


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
PROGRAM (48)
    on left: 3 4, on right: 0 3
$@1 (49)
    on left: 1, on right: 3
$@2 (50)
    on left: 2, on right: 3
FTYPE (51)
    on left: 5 6, on right: 3
PARAMS (52)
    on left: 7 8 9 10 11, on right: 3
VTYPE (53)
    on left: 12 13, on right: 8 9 10 11 22
STMTS (54)
    on left: 14 15 16 17 18 19 20, on right: 3 22 24 26 31 34 37 40
    43 45 51
DECLARE_STMT (55)
    on left: 22 24 26, on right: 14
$@3 (56)
    on left: 21, on right: 22
$@4 (57)
    on left: 23, on right: 24
$@5 (58)
    on left: 25, on right: 26
IDS (59)
    on left: 27 29, on right: 22 29
$@6 (60)
    on left: 28, on right: 29
ASSIGN_STMT (61)
    on left: 31, on right: 15
$@7 (62)
    on left: 30, on right: 31
WHILE_STMT (63)
    on left: 34, on right: 16
$@8 (64)
    on left: 32, on right: 34
$@9 (65)
    on left: 33, on right: 34
IF_STMT (66)
    on left: 37, on right: 17
$@10 (67)
    on left: 35, on right: 37
$@11 (68)
    on left: 36, on right: 37
ELSEIF_STMT (69)
    on left: 40 41, on right: 37
$@12 (70)
    on left: 38, on right: 40
$@13 (71)
    on left: 39, on right: 40
ELSE_STMT (72)
    on left: 43 44, on right: 37
$@14 (73)
    on left: 42, on right: 43
FUNC_CALL (74)
    on left: 45, on right: 18 74
ARGS_IN (75)
    on left: 46 47 48 49 50, on right: 45
RETURN_STMT (76)
    on left: 51, on right: 19
EXP (77)
    on left: 52 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74, on right: 24 31 34 37 40 47 48 49 50 51 52 53 54 55
    57 58 59 60 61 62 63 64 65 66 67 68 69 72
$@15 (78)
    on left: 56, on right: 57


state 0

    0 $accept: . PROGRAM $end

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 4
    FTYPE    go to state 5


state 1

    4 PROGRAM: ENTER .

    $default  reduce using rule 4 (PROGRAM)


state 2

    6 FTYPE: INT .

    $default  reduce using rule 6 (FTYPE)


state 3

    5 FTYPE: VOID .

    $default  reduce using rule 5 (FTYPE)


state 4

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


state 5

    3 PROGRAM: FTYPE . ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    ID  shift, and go to state 7


state 6

    0 $accept: PROGRAM $end .

    $default  accept


state 7

    3 PROGRAM: FTYPE ID . '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    '('  shift, and go to state 8


state 8

    3 PROGRAM: FTYPE ID '(' . PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 7 (PARAMS)

    PARAMS  go to state 11
    VTYPE   go to state 12


state 9

   12 VTYPE: CHAR .

    $default  reduce using rule 12 (VTYPE)


state 10

   13 VTYPE: INT .

    $default  reduce using rule 13 (VTYPE)


state 11

    3 PROGRAM: FTYPE ID '(' PARAMS . $@1 ')' '{' STMTS '}' $@2 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 13


state 12

    8 PARAMS: VTYPE . ID
    9       | VTYPE . ID ',' VTYPE ID
   10       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE . ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 14


state 13

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 . ')' '{' STMTS '}' $@2 PROGRAM

    ')'  shift, and go to state 15


state 14

    8 PARAMS: VTYPE ID .
    9       | VTYPE ID . ',' VTYPE ID
   10       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID
   11       | VTYPE ID . ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 16

    $default  reduce using rule 8 (PARAMS)


state 15

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' . '{' STMTS '}' $@2 PROGRAM

    '{'  shift, and go to state 17


state 16

    9 PARAMS: VTYPE ID ',' . VTYPE ID
   10       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID
   11       | VTYPE ID ',' . VTYPE ID ',' VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 18


state 17

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' . STMTS '}' $@2 PROGRAM

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 27
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 18

    9 PARAMS: VTYPE ID ',' VTYPE . ID
   10       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE . ID ',' VTYPE ID ',' VTYPE ID

    ID  shift, and go to state 34


state 19

   31 ASSIGN_STMT: ID . EQ EXP '$' $@7 STMTS
   45 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 35
    EQ   shift, and go to state 36


state 20

   20 STMTS: ENTER .

    $default  reduce using rule 20 (STMTS)


state 21

   12 VTYPE: CHAR .
   26 DECLARE_STMT: CHAR . ID EQ char_val $@5 '$' STMTS

    $default  reduce using rule 12 (VTYPE)


state 22

   13 VTYPE: INT .
   24 DECLARE_STMT: INT . ID EQ EXP $@4 '$' STMTS

    $default  reduce using rule 13 (VTYPE)


state 23

   51 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 44


state 24

   34 WHILE_STMT: WHILE . $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS

    $default  reduce using rule 32 ($@8)

    $@8  go to state 45


state 25

   37 IF_STMT: IF . $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    $default  reduce using rule 35 ($@10)

    $@10  go to state 46


state 26

   22 DECLARE_STMT: VTYPE . ID $@3 IDS '$' STMTS

    ID  shift, and go to state 47


state 27

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS . '}' $@2 PROGRAM

    '}'  shift, and go to state 48


state 28

   14 STMTS: DECLARE_STMT .

    $default  reduce using rule 14 (STMTS)


state 29

   15 STMTS: ASSIGN_STMT .

    $default  reduce using rule 15 (STMTS)


state 30

   16 STMTS: WHILE_STMT .

    $default  reduce using rule 16 (STMTS)


state 31

   17 STMTS: IF_STMT .

    $default  reduce using rule 17 (STMTS)


state 32

   18 STMTS: FUNC_CALL .

    $default  reduce using rule 18 (STMTS)


state 33

   19 STMTS: RETURN_STMT .

    $default  reduce using rule 19 (STMTS)


state 34

    9 PARAMS: VTYPE ID ',' VTYPE ID .
   10       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID
   11       | VTYPE ID ',' VTYPE ID . ',' VTYPE ID ',' VTYPE ID

    ','  shift, and go to state 49

    $default  reduce using rule 9 (PARAMS)


state 35

   45 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    ')'       reduce using rule 46 (ARGS_IN)
    ')'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    ARGS_IN    go to state 50
    EXP        go to state 51


state 36

   31 ASSIGN_STMT: ID EQ . EXP '$' $@7 STMTS

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 52


state 37

   70 EXP: INTVAL .

    $default  reduce using rule 70 (EXP)


state 38

   45 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 35


state 39

   71 EXP: char_val .

    $default  reduce using rule 71 (EXP)


state 40

   72 EXP: '-' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 53


state 41

   68 EXP: NOT . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 54


state 42

   69 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 55


state 43

   74 EXP: FUNC_CALL .

    $default  reduce using rule 74 (EXP)


state 44

   51 RETURN_STMT: RETURN EXP . '$' STMTS
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    '$'            shift, and go to state 71


state 45

   34 WHILE_STMT: WHILE $@8 . '(' EXP ')' '{' STMTS '}' $@9 STMTS

    '('  shift, and go to state 72


state 46

   37 IF_STMT: IF $@10 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '('  shift, and go to state 73


state 47

   22 DECLARE_STMT: VTYPE ID . $@3 IDS '$' STMTS

    $default  reduce using rule 21 ($@3)

    $@3  go to state 74


state 48

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' . $@2 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 75


state 49

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' . VTYPE ID
   11       | VTYPE ID ',' VTYPE ID ',' . VTYPE ID ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 76


state 50

   45 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 77


state 51

   47 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   48        | EXP . ',' EXP ',' EXP
   49        | EXP . ',' EXP
   50        | EXP .
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    ','            shift, and go to state 78
    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 50 (ARGS_IN)


state 52

   31 ASSIGN_STMT: ID EQ EXP . '$' $@7 STMTS
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    '$'            shift, and go to state 79


state 53

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP
   72    | '-' EXP .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 72 (EXP)


state 54

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP
   68    | NOT EXP .

    $default  reduce using rule 68 (EXP)


state 55

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP
   69    | '(' EXP . ')'

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    ')'            shift, and go to state 80


state 56

   64 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 81


state 57

   63 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 82


state 58

   65 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 83


state 59

   67 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 84


state 60

   66 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 85


state 61

   57 EXP: EXP ISNOTEQ . EXP $@15

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 86


state 62

   58 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 87


state 63

   55 EXP: EXP ISHIGHERANDEQ . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 88


state 64

   54 EXP: EXP ISHIGHER . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 89


state 65

   53 EXP: EXP ISLOWERANDEQ . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 90


state 66

   52 EXP: EXP ISLOWER . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 91


state 67

   59 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 92


state 68

   60 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 93


state 69

   61 EXP: EXP '*' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 94


state 70

   62 EXP: EXP '/' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 95


state 71

   51 RETURN_STMT: RETURN EXP '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 96
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 72

   34 WHILE_STMT: WHILE $@8 '(' . EXP ')' '{' STMTS '}' $@9 STMTS

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 97


state 73

   37 IF_STMT: IF $@10 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 98


state 74

   22 DECLARE_STMT: VTYPE ID $@3 . IDS '$' STMTS

    ','  shift, and go to state 99

    $default  reduce using rule 27 (IDS)

    IDS  go to state 100


state 75

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 . PROGRAM

    ENTER  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    PROGRAM  go to state 101
    FTYPE    go to state 5


state 76

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE . ID
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE . ID ',' VTYPE ID

    ID  shift, and go to state 102


state 77

   45 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 103


state 78

   47 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   48        | EXP ',' . EXP ',' EXP
   49        | EXP ',' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 104


state 79

   31 ASSIGN_STMT: ID EQ EXP '$' . $@7 STMTS

    $default  reduce using rule 30 ($@7)

    $@7  go to state 105


state 80

   69 EXP: '(' EXP ')' .

    $default  reduce using rule 69 (EXP)


state 81

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   64    | EXP COND_OR EXP .
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 64 (EXP)


state 82

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   63    | EXP COND_AND EXP .
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 63 (EXP)


state 83

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   65    | EXP LOG_OR EXP .
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 65 (EXP)


state 84

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP
   67    | EXP LOG_XOR EXP .

    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 67 (EXP)


state 85

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   66    | EXP LOG_AND EXP .
   67    | EXP . LOG_XOR EXP

    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 66 (EXP)


state 86

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   57    | EXP ISNOTEQ EXP . $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    COND_OR        [reduce using rule 56 ($@15)]
    COND_AND       [reduce using rule 56 ($@15)]
    LOG_OR         [reduce using rule 56 ($@15)]
    LOG_XOR        [reduce using rule 56 ($@15)]
    LOG_AND        [reduce using rule 56 ($@15)]
    ISNOTEQ        [reduce using rule 56 ($@15)]
    ISEQ           [reduce using rule 56 ($@15)]
    ISHIGHERANDEQ  [reduce using rule 56 ($@15)]
    ISHIGHER       [reduce using rule 56 ($@15)]
    ISLOWERANDEQ   [reduce using rule 56 ($@15)]
    ISLOWER        [reduce using rule 56 ($@15)]
    '+'            [reduce using rule 56 ($@15)]
    '-'            [reduce using rule 56 ($@15)]
    '*'            [reduce using rule 56 ($@15)]
    '/'            [reduce using rule 56 ($@15)]
    $default       reduce using rule 56 ($@15)

    $@15  go to state 106


state 87

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   58    | EXP ISEQ EXP .
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 58 (EXP)


state 88

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   55    | EXP ISHIGHERANDEQ EXP .
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 55 (EXP)


state 89

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   54    | EXP ISHIGHER EXP .
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 54 (EXP)


state 90

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   53    | EXP ISLOWERANDEQ EXP .
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 53 (EXP)


state 91

   52 EXP: EXP . ISLOWER EXP
   52    | EXP ISLOWER EXP .
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 52 (EXP)


state 92

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   59    | EXP '+' EXP .
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 59 (EXP)


state 93

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   60    | EXP '-' EXP .
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 60 (EXP)


state 94

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   61    | EXP '*' EXP .
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    $default  reduce using rule 61 (EXP)


state 95

   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   62    | EXP '/' EXP .
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    $default  reduce using rule 62 (EXP)


state 96

   51 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 51 (RETURN_STMT)


state 97

   34 WHILE_STMT: WHILE $@8 '(' EXP . ')' '{' STMTS '}' $@9 STMTS
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    ')'            shift, and go to state 107


state 98

   37 IF_STMT: IF $@10 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    ')'            shift, and go to state 108


state 99

   29 IDS: ',' . ID $@6 IDS

    ID  shift, and go to state 109


state 100

   22 DECLARE_STMT: VTYPE ID $@3 IDS . '$' STMTS

    '$'  shift, and go to state 110


state 101

    3 PROGRAM: FTYPE ID '(' PARAMS $@1 ')' '{' STMTS '}' $@2 PROGRAM .

    $default  reduce using rule 3 (PROGRAM)


state 102

   10 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID .
   11       | VTYPE ID ',' VTYPE ID ',' VTYPE ID . ',' VTYPE ID

    ','  shift, and go to state 111

    $default  reduce using rule 10 (PARAMS)


state 103

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 112
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 104

   47 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   48        | EXP ',' EXP . ',' EXP
   49        | EXP ',' EXP .
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    ','            shift, and go to state 113
    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 49 (ARGS_IN)


state 105

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 114
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 106

   57 EXP: EXP ISNOTEQ EXP $@15 .

    $default  reduce using rule 57 (EXP)


state 107

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' . '{' STMTS '}' $@9 STMTS

    '{'  shift, and go to state 115


state 108

   37 IF_STMT: IF $@10 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '{'  shift, and go to state 116


state 109

   29 IDS: ',' ID . $@6 IDS

    $default  reduce using rule 28 ($@6)

    $@6  go to state 117


state 110

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 118
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 111

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 119


state 112

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 45 (FUNC_CALL)


state 113

   47 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   48        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 120


state 114

   31 ASSIGN_STMT: ID EQ EXP '$' $@7 STMTS .

    $default  reduce using rule 31 (ASSIGN_STMT)


state 115

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' . STMTS '}' $@9 STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 121
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 116

   37 IF_STMT: IF $@10 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 122
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 117

   29 IDS: ',' ID $@6 . IDS

    ','  shift, and go to state 99

    $default  reduce using rule 27 (IDS)

    IDS  go to state 123


state 118

   22 DECLARE_STMT: VTYPE ID $@3 IDS '$' STMTS .

    $default  reduce using rule 22 (DECLARE_STMT)


state 119

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE . ID

    ID  shift, and go to state 124


state 120

   47 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   48        | EXP ',' EXP ',' EXP .
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    ','            shift, and go to state 125
    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 48 (ARGS_IN)


state 121

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS . '}' $@9 STMTS

    '}'  shift, and go to state 126


state 122

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@11 STMTS

    '}'  shift, and go to state 127


state 123

   29 IDS: ',' ID $@6 IDS .

    $default  reduce using rule 29 (IDS)


state 124

   11 PARAMS: VTYPE ID ',' VTYPE ID ',' VTYPE ID ',' VTYPE ID .

    $default  reduce using rule 11 (PARAMS)


state 125

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 128


state 126

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' . $@9 STMTS

    $default  reduce using rule 33 ($@9)

    $@9  go to state 129


state 127

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@11 STMTS

    ENTER   shift, and go to state 130
    ELSEIF  shift, and go to state 131

    ELSEIF_STMT  go to state 132


state 128

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70

    $default  reduce using rule 47 (ARGS_IN)


state 129

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 133
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 130

   41 ELSEIF_STMT: ENTER .

    $default  reduce using rule 41 (ELSEIF_STMT)


state 131

   40 ELSEIF_STMT: ELSEIF . $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF

    $default  reduce using rule 38 ($@12)

    $@12  go to state 134


state 132

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@11 STMTS

    ENTER  shift, and go to state 135
    ELSE   shift, and go to state 136

    ELSE_STMT  go to state 137


state 133

   34 WHILE_STMT: WHILE $@8 '(' EXP ')' '{' STMTS '}' $@9 STMTS .

    $default  reduce using rule 34 (WHILE_STMT)


state 134

   40 ELSEIF_STMT: ELSEIF $@12 . '(' EXP ')' '{' STMTS '}' $@13 ELSEIF

    '('  shift, and go to state 138


state 135

   44 ELSE_STMT: ENTER .

    $default  reduce using rule 44 (ELSE_STMT)


state 136

   43 ELSE_STMT: ELSE . $@14 '{' STMTS '}'

    $default  reduce using rule 42 ($@14)

    $@14  go to state 139


state 137

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@11 STMTS

    $default  reduce using rule 36 ($@11)

    $@11  go to state 140


state 138

   40 ELSEIF_STMT: ELSEIF $@12 '(' . EXP ')' '{' STMTS '}' $@13 ELSEIF

    INTVAL    shift, and go to state 37
    ID        shift, and go to state 38
    char_val  shift, and go to state 39
    '-'       shift, and go to state 40
    NOT       shift, and go to state 41
    '('       shift, and go to state 42

    '-'       [reduce using rule 73 (EXP)]
    $default  reduce using rule 73 (EXP)

    FUNC_CALL  go to state 43
    EXP        go to state 141


state 139

   43 ELSE_STMT: ELSE $@14 . '{' STMTS '}'

    '{'  shift, and go to state 142


state 140

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 . STMTS

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 143
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 141

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP . ')' '{' STMTS '}' $@13 ELSEIF
   52 EXP: EXP . ISLOWER EXP
   53    | EXP . ISLOWERANDEQ EXP
   54    | EXP . ISHIGHER EXP
   55    | EXP . ISHIGHERANDEQ EXP
   57    | EXP . ISNOTEQ EXP $@15
   58    | EXP . ISEQ EXP
   59    | EXP . '+' EXP
   60    | EXP . '-' EXP
   61    | EXP . '*' EXP
   62    | EXP . '/' EXP
   63    | EXP . COND_AND EXP
   64    | EXP . COND_OR EXP
   65    | EXP . LOG_OR EXP
   66    | EXP . LOG_AND EXP
   67    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 56
    COND_AND       shift, and go to state 57
    LOG_OR         shift, and go to state 58
    LOG_XOR        shift, and go to state 59
    LOG_AND        shift, and go to state 60
    ISNOTEQ        shift, and go to state 61
    ISEQ           shift, and go to state 62
    ISHIGHERANDEQ  shift, and go to state 63
    ISHIGHER       shift, and go to state 64
    ISLOWERANDEQ   shift, and go to state 65
    ISLOWER        shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '*'            shift, and go to state 69
    '/'            shift, and go to state 70
    ')'            shift, and go to state 144


state 142

   43 ELSE_STMT: ELSE $@14 '{' . STMTS '}'

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 145
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 143

   37 IF_STMT: IF $@10 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@11 STMTS .

    $default  reduce using rule 37 (IF_STMT)


state 144

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' . '{' STMTS '}' $@13 ELSEIF

    '{'  shift, and go to state 146


state 145

   43 ELSE_STMT: ELSE $@14 '{' STMTS . '}'

    '}'  shift, and go to state 147


state 146

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' . STMTS '}' $@13 ELSEIF

    ID      shift, and go to state 19
    ENTER   shift, and go to state 20
    CHAR    shift, and go to state 21
    INT     shift, and go to state 22
    RETURN  shift, and go to state 23
    WHILE   shift, and go to state 24
    IF      shift, and go to state 25

    VTYPE         go to state 26
    STMTS         go to state 148
    DECLARE_STMT  go to state 28
    ASSIGN_STMT   go to state 29
    WHILE_STMT    go to state 30
    IF_STMT       go to state 31
    FUNC_CALL     go to state 32
    RETURN_STMT   go to state 33


state 147

   43 ELSE_STMT: ELSE $@14 '{' STMTS '}' .

    $default  reduce using rule 43 (ELSE_STMT)


state 148

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS . '}' $@13 ELSEIF

    '}'  shift, and go to state 149


state 149

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' . $@13 ELSEIF

    $default  reduce using rule 39 ($@13)

    $@13  go to state 150


state 150

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 . ELSEIF

    ELSEIF  shift, and go to state 151


state 151

   40 ELSEIF_STMT: ELSEIF $@12 '(' EXP ')' '{' STMTS '}' $@13 ELSEIF .

    $default  reduce using rule 40 (ELSEIF_STMT)
