Terminals unused in grammar

   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR
   NUM


Rules useless in parser due to conflicts

   12 $@5: /* empty */

   15 $@7: /* empty */


State 13 conflicts: 1 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM
    5        | /* empty */

    6 FTYPE: VOID
    7      | INT

    8 PARAMS: /* empty */
    9       | VTYPE ID

   10 $@4: /* empty */

   11 PARAMS: VTYPE ID $@4 ',' VTYPE ID

   12 $@5: /* empty */

   13 $@6: /* empty */

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID $@6 ',' VTYPE ID

   15 $@7: /* empty */

   16 $@8: /* empty */

   17 $@9: /* empty */

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

   19 VTYPE: CHAR
   20      | INT

   21 STMTS: DECLARE_STMT
   22      | ASSIGN_STMT
   23      | WHILE_STMT
   24      | IF_STMT
   25      | FUNC_CALL
   26      | RETURN_STMT
   27      | /* empty */

   28 $@10: /* empty */

   29 DECLARE_STMT: INT ID $@10 IDS '$' STMTS

   30 $@11: /* empty */

   31 DECLARE_STMT: INT ID EQ EXP $@11 '$' STMTS

   32 $@12: /* empty */

   33 DECLARE_STMT: CHAR ID $@12 IDS '$' STMTS

   34 $@13: /* empty */

   35 DECLARE_STMT: CHAR ID EQ char_val $@13 '$' STMTS

   36 IDS: /* empty */

   37 $@14: /* empty */

   38 IDS: ',' ID $@14 IDS

   39 $@15: /* empty */

   40 ASSIGN_STMT: ID EQ EXP '$' $@15 STMTS

   41 $@16: /* empty */

   42 $@17: /* empty */

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' STMTS '}' $@17 STMTS

   44 $@18: /* empty */

   45 $@19: /* empty */

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

   47 $@20: /* empty */

   48 $@21: /* empty */

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' STMTS '}' $@21 ELSEIF
   50            | /* empty */

   51 $@22: /* empty */

   52 ELSE_STMT: ELSE $@22 '{' STMTS '}'
   53          | /* empty */

   54 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   55 ARGS_IN: /* empty */
   56        | EXP ',' EXP ',' EXP ',' EXP
   57        | EXP ',' EXP ',' EXP
   58        | EXP ',' EXP
   59        | EXP

   60 RETURN_STMT: RETURN EXP '$' STMTS

   61 EXP: EXP ISEQ EXP
   62    | EXP ISNOTEQ EXP
   63    | EXP '+' EXP
   64    | EXP '-' EXP
   65    | EXP '*' EXP
   66    | EXP '/' EXP
   67    | INTVAL
   68    | EXP COND_AND EXP
   69    | EXP COND_OR EXP
   70    | EXP LOG_OR EXP
   71    | EXP LOG_AND EXP
   72    | EXP LOG_XOR EXP
   73    | NOT EXP
   74    | '(' EXP ')'
   75    | char_val
   76    | ID
   77    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 29 31 33 35 40 54 60
'(' (40) 4 43 46 49 54 74
')' (41) 4 43 46 49 54 74
'*' (42) 65
'+' (43) 63
',' (44) 11 14 18 38 56 57 58
'-' (45) 64 77
'/' (47) 66
'[' (91)
']' (93)
'{' (123) 4 43 46 49 52
'}' (125) 4 43 46 49 52
error (256)
INTVAL (258) 67
char_val (259) 35 75
COND_OR (260) 69
COND_AND (261) 68
LOG_OR (262) 70
LOG_XOR (263) 72
LOG_AND (264) 71
ISNOTEQ (265) 62
ISEQ (266) 61
ISHIGHERANDEQ (267)
ISHIGHER (268)
ISLOWERANDEQ (269)
ISLOWER (270)
NOT (271) 73
VALUE_ID (272)
EQ (273) 31 35 40
MULTI_COMMENT (274)
COMMENT (275)
CHAR (276) 19 33 35
INT (277) 7 20 29 31
CONTINUE (278)
BREAK (279)
RETURN (280) 60
MAIN (281)
FOR (282)
VOID (283) 6
ELSE (284) 52
ELSEIF (285) 49
WHILE (286) 43
IF (287) 46
NUM (288)
ID (289) 4 9 11 14 18 29 31 33 35 38 40 54 76


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
EXP (48)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77, on right:
    31 40 43 46 49 56 57 58 59 60 61 62 63 64 65 66 68 69 70 71 72
    73 74 77
VTYPE (49)
    on left: 19 20, on right: 9 11 14 18
PARAMS (50)
    on left: 8 9 11 14 18, on right: 4
ARGS_IN (51)
    on left: 55 56 57 58 59, on right: 54
PROGRAM (52)
    on left: 4 5, on right: 0 4
$@1 (53)
    on left: 1, on right: 4
$@2 (54)
    on left: 2, on right: 4
$@3 (55)
    on left: 3, on right: 4
FTYPE (56)
    on left: 6 7, on right: 4
$@4 (57)
    on left: 10, on right: 11
$@5 (58)
    on left: 12, on right: 14
$@6 (59)
    on left: 13, on right: 14
$@7 (60)
    on left: 15, on right: 18
$@8 (61)
    on left: 16, on right: 18
$@9 (62)
    on left: 17, on right: 18
STMTS (63)
    on left: 21 22 23 24 25 26 27, on right: 4 29 31 33 35 40 43 46
    49 52 54 60
DECLARE_STMT (64)
    on left: 29 31 33 35, on right: 21
$@10 (65)
    on left: 28, on right: 29
$@11 (66)
    on left: 30, on right: 31
$@12 (67)
    on left: 32, on right: 33
$@13 (68)
    on left: 34, on right: 35
IDS (69)
    on left: 36 38, on right: 29 33 38
$@14 (70)
    on left: 37, on right: 38
ASSIGN_STMT (71)
    on left: 40, on right: 22
$@15 (72)
    on left: 39, on right: 40
WHILE_STMT (73)
    on left: 43, on right: 23
$@16 (74)
    on left: 41, on right: 43
$@17 (75)
    on left: 42, on right: 43
IF_STMT (76)
    on left: 46, on right: 24
$@18 (77)
    on left: 44, on right: 46
$@19 (78)
    on left: 45, on right: 46
ELSEIF_STMT (79)
    on left: 49 50, on right: 46
$@20 (80)
    on left: 47, on right: 49
$@21 (81)
    on left: 48, on right: 49
ELSE_STMT (82)
    on left: 52 53, on right: 46
$@22 (83)
    on left: 51, on right: 52
FUNC_CALL (84)
    on left: 54, on right: 25
RETURN_STMT (85)
    on left: 60, on right: 26


state 0

    0 $accept: . PROGRAM $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 3
    FTYPE    go to state 4


state 1

    7 FTYPE: INT .

    $default  reduce using rule 7 (FTYPE)


state 2

    6 FTYPE: VOID .

    $default  reduce using rule 6 (FTYPE)


state 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


state 4

    4 PROGRAM: FTYPE . ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    ID  shift, and go to state 6


state 5

    0 $accept: PROGRAM $end .

    $default  accept


state 6

    4 PROGRAM: FTYPE ID . $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


state 7

    4 PROGRAM: FTYPE ID $@1 . '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    '('  shift, and go to state 8


state 8

    4 PROGRAM: FTYPE ID $@1 '(' . PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 8 (PARAMS)

    VTYPE   go to state 11
    PARAMS  go to state 12


state 9

   19 VTYPE: CHAR .

    $default  reduce using rule 19 (VTYPE)


state 10

   20 VTYPE: INT .

    $default  reduce using rule 20 (VTYPE)


state 11

    9 PARAMS: VTYPE . ID
   11       | VTYPE . ID $@4 ',' VTYPE ID
   14       | VTYPE . ID $@5 ',' VTYPE ID $@6 ',' VTYPE ID
   18       | VTYPE . ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    ID  shift, and go to state 13


state 12

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS . $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 14


state 13

    9 PARAMS: VTYPE ID .
   11       | VTYPE ID . $@4 ',' VTYPE ID
   14       | VTYPE ID . $@5 ',' VTYPE ID $@6 ',' VTYPE ID
   18       | VTYPE ID . $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    ','       reduce using rule 10 ($@4)
    ','       [reduce using rule 12 ($@5)]
    ','       [reduce using rule 15 ($@7)]
    $default  reduce using rule 9 (PARAMS)

    $@4  go to state 15
    $@5  go to state 16
    $@7  go to state 17


state 14

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 . ')' '{' STMTS '}' $@3 PROGRAM

    ')'  shift, and go to state 18


state 15

   11 PARAMS: VTYPE ID $@4 . ',' VTYPE ID

    ','  shift, and go to state 19


state 16

   14 PARAMS: VTYPE ID $@5 . ',' VTYPE ID $@6 ',' VTYPE ID

    ','  shift, and go to state 20


state 17

   18 PARAMS: VTYPE ID $@7 . ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    ','  shift, and go to state 21


state 18

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' . '{' STMTS '}' $@3 PROGRAM

    '{'  shift, and go to state 22


state 19

   11 PARAMS: VTYPE ID $@4 ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 23


state 20

   14 PARAMS: VTYPE ID $@5 ',' . VTYPE ID $@6 ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 24


state 21

   18 PARAMS: VTYPE ID $@7 ',' . VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 25


state 22

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' . STMTS '}' $@3 PROGRAM

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 32
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 23

   11 PARAMS: VTYPE ID $@4 ',' VTYPE . ID

    ID  shift, and go to state 39


state 24

   14 PARAMS: VTYPE ID $@5 ',' VTYPE . ID $@6 ',' VTYPE ID

    ID  shift, and go to state 40


state 25

   18 PARAMS: VTYPE ID $@7 ',' VTYPE . ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    ID  shift, and go to state 41


state 26

   33 DECLARE_STMT: CHAR . ID $@12 IDS '$' STMTS
   35             | CHAR . ID EQ char_val $@13 '$' STMTS

    ID  shift, and go to state 42


state 27

   29 DECLARE_STMT: INT . ID $@10 IDS '$' STMTS
   31             | INT . ID EQ EXP $@11 '$' STMTS

    ID  shift, and go to state 43


state 28

   60 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 50


state 29

   43 WHILE_STMT: WHILE . $@16 '(' EXP ')' '{' STMTS '}' $@17 STMTS

    $default  reduce using rule 41 ($@16)

    $@16  go to state 51


state 30

   46 IF_STMT: IF . $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    $default  reduce using rule 44 ($@18)

    $@18  go to state 52


state 31

   40 ASSIGN_STMT: ID . EQ EXP '$' $@15 STMTS
   54 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 53
    EQ   shift, and go to state 54


state 32

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS . '}' $@3 PROGRAM

    '}'  shift, and go to state 55


state 33

   21 STMTS: DECLARE_STMT .

    $default  reduce using rule 21 (STMTS)


state 34

   22 STMTS: ASSIGN_STMT .

    $default  reduce using rule 22 (STMTS)


state 35

   23 STMTS: WHILE_STMT .

    $default  reduce using rule 23 (STMTS)


state 36

   24 STMTS: IF_STMT .

    $default  reduce using rule 24 (STMTS)


state 37

   25 STMTS: FUNC_CALL .

    $default  reduce using rule 25 (STMTS)


state 38

   26 STMTS: RETURN_STMT .

    $default  reduce using rule 26 (STMTS)


state 39

   11 PARAMS: VTYPE ID $@4 ',' VTYPE ID .

    $default  reduce using rule 11 (PARAMS)


state 40

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID . $@6 ',' VTYPE ID

    $default  reduce using rule 13 ($@6)

    $@6  go to state 56


state 41

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID . $@8 ',' VTYPE ID $@9 ',' VTYPE ID

    $default  reduce using rule 16 ($@8)

    $@8  go to state 57


state 42

   33 DECLARE_STMT: CHAR ID . $@12 IDS '$' STMTS
   35             | CHAR ID . EQ char_val $@13 '$' STMTS

    EQ  shift, and go to state 58

    $default  reduce using rule 32 ($@12)

    $@12  go to state 59


state 43

   29 DECLARE_STMT: INT ID . $@10 IDS '$' STMTS
   31             | INT ID . EQ EXP $@11 '$' STMTS

    EQ  shift, and go to state 60

    $default  reduce using rule 28 ($@10)

    $@10  go to state 61


state 44

   67 EXP: INTVAL .

    $default  reduce using rule 67 (EXP)


state 45

   75 EXP: char_val .

    $default  reduce using rule 75 (EXP)


state 46

   77 EXP: '-' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 62


state 47

   73 EXP: NOT . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 63


state 48

   74 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 64


state 49

   76 EXP: ID .

    $default  reduce using rule 76 (EXP)


state 50

   60 RETURN_STMT: RETURN EXP . '$' STMTS
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '$'       shift, and go to state 76


state 51

   43 WHILE_STMT: WHILE $@16 . '(' EXP ')' '{' STMTS '}' $@17 STMTS

    '('  shift, and go to state 77


state 52

   46 IF_STMT: IF $@18 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    '('  shift, and go to state 78


state 53

   54 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    $default  reduce using rule 55 (ARGS_IN)

    EXP      go to state 79
    ARGS_IN  go to state 80


state 54

   40 ASSIGN_STMT: ID EQ . EXP '$' $@15 STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 81


state 55

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' . $@3 PROGRAM

    $default  reduce using rule 3 ($@3)

    $@3  go to state 82


state 56

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID $@6 . ',' VTYPE ID

    ','  shift, and go to state 83


state 57

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 . ',' VTYPE ID $@9 ',' VTYPE ID

    ','  shift, and go to state 84


state 58

   35 DECLARE_STMT: CHAR ID EQ . char_val $@13 '$' STMTS

    char_val  shift, and go to state 85


state 59

   33 DECLARE_STMT: CHAR ID $@12 . IDS '$' STMTS

    ','  shift, and go to state 86

    $default  reduce using rule 36 (IDS)

    IDS  go to state 87


state 60

   31 DECLARE_STMT: INT ID EQ . EXP $@11 '$' STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 88


state 61

   29 DECLARE_STMT: INT ID $@10 . IDS '$' STMTS

    ','  shift, and go to state 86

    $default  reduce using rule 36 (IDS)

    IDS  go to state 89


state 62

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP
   77    | '-' EXP .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 77 (EXP)


state 63

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP
   73    | NOT EXP .

    $default  reduce using rule 73 (EXP)


state 64

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP
   74    | '(' EXP . ')'

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    ')'       shift, and go to state 90


state 65

   69 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 91


state 66

   68 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 92


state 67

   70 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 93


state 68

   72 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 94


state 69

   71 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 95


state 70

   62 EXP: EXP ISNOTEQ . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 96


state 71

   61 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 97


state 72

   63 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 98


state 73

   64 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 99


state 74

   65 EXP: EXP '*' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 100


state 75

   66 EXP: EXP '/' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 101


state 76

   60 RETURN_STMT: RETURN EXP '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 102
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 77

   43 WHILE_STMT: WHILE $@16 '(' . EXP ')' '{' STMTS '}' $@17 STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 103


state 78

   46 IF_STMT: IF $@18 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 104


state 79

   56 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   57        | EXP . ',' EXP ',' EXP
   58        | EXP . ',' EXP
   59        | EXP .
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    ','       shift, and go to state 105
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 59 (ARGS_IN)


state 80

   54 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 106


state 81

   40 ASSIGN_STMT: ID EQ EXP . '$' $@15 STMTS
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '$'       shift, and go to state 107


state 82

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 . PROGRAM

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 108
    FTYPE    go to state 4


state 83

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID $@6 ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 109


state 84

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' . VTYPE ID $@9 ',' VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 110


state 85

   35 DECLARE_STMT: CHAR ID EQ char_val . $@13 '$' STMTS

    $default  reduce using rule 34 ($@13)

    $@13  go to state 111


state 86

   38 IDS: ',' . ID $@14 IDS

    ID  shift, and go to state 112


state 87

   33 DECLARE_STMT: CHAR ID $@12 IDS . '$' STMTS

    '$'  shift, and go to state 113


state 88

   31 DECLARE_STMT: INT ID EQ EXP . $@11 '$' STMTS
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 30 ($@11)

    $@11  go to state 114


state 89

   29 DECLARE_STMT: INT ID $@10 IDS . '$' STMTS

    '$'  shift, and go to state 115


state 90

   74 EXP: '(' EXP ')' .

    $default  reduce using rule 74 (EXP)


state 91

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   69    | EXP COND_OR EXP .
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 69 (EXP)


state 92

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   68    | EXP COND_AND EXP .
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    LOG_OR   shift, and go to state 67
    LOG_XOR  shift, and go to state 68
    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75

    $default  reduce using rule 68 (EXP)


state 93

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   70    | EXP LOG_OR EXP .
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    LOG_XOR  shift, and go to state 68
    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75

    $default  reduce using rule 70 (EXP)


state 94

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP
   72    | EXP LOG_XOR EXP .

    LOG_AND  shift, and go to state 69
    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75

    $default  reduce using rule 72 (EXP)


state 95

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   71    | EXP LOG_AND EXP .
   72    | EXP . LOG_XOR EXP

    ISNOTEQ  shift, and go to state 70
    ISEQ     shift, and go to state 71
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75

    $default  reduce using rule 71 (EXP)


state 96

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   62    | EXP ISNOTEQ EXP .
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 62 (EXP)


state 97

   61 EXP: EXP . ISEQ EXP
   61    | EXP ISEQ EXP .
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 61 (EXP)


state 98

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   63    | EXP '+' EXP .
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 63 (EXP)


state 99

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   64    | EXP '-' EXP .
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 64 (EXP)


state 100

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   65    | EXP '*' EXP .
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    $default  reduce using rule 65 (EXP)


state 101

   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   66    | EXP '/' EXP .
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    $default  reduce using rule 66 (EXP)


state 102

   60 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 60 (RETURN_STMT)


state 103

   43 WHILE_STMT: WHILE $@16 '(' EXP . ')' '{' STMTS '}' $@17 STMTS
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    ')'       shift, and go to state 116


state 104

   46 IF_STMT: IF $@18 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    ')'       shift, and go to state 117


state 105

   56 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   57        | EXP ',' . EXP ',' EXP
   58        | EXP ',' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 118


state 106

   54 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 119


state 107

   40 ASSIGN_STMT: ID EQ EXP '$' . $@15 STMTS

    $default  reduce using rule 39 ($@15)

    $@15  go to state 120


state 108

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM .

    $default  reduce using rule 4 (PROGRAM)


state 109

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID $@6 ',' VTYPE . ID

    ID  shift, and go to state 121


state 110

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE . ID $@9 ',' VTYPE ID

    ID  shift, and go to state 122


state 111

   35 DECLARE_STMT: CHAR ID EQ char_val $@13 . '$' STMTS

    '$'  shift, and go to state 123


state 112

   38 IDS: ',' ID . $@14 IDS

    $default  reduce using rule 37 ($@14)

    $@14  go to state 124


state 113

   33 DECLARE_STMT: CHAR ID $@12 IDS '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 125
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 114

   31 DECLARE_STMT: INT ID EQ EXP $@11 . '$' STMTS

    '$'  shift, and go to state 126


state 115

   29 DECLARE_STMT: INT ID $@10 IDS '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 127
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 116

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' . '{' STMTS '}' $@17 STMTS

    '{'  shift, and go to state 128


state 117

   46 IF_STMT: IF $@18 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    '{'  shift, and go to state 129


state 118

   56 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   57        | EXP ',' EXP . ',' EXP
   58        | EXP ',' EXP .
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    ','       shift, and go to state 130
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 58 (ARGS_IN)


state 119

   54 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 131
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 120

   40 ASSIGN_STMT: ID EQ EXP '$' $@15 . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 132
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 121

   14 PARAMS: VTYPE ID $@5 ',' VTYPE ID $@6 ',' VTYPE ID .

    $default  reduce using rule 14 (PARAMS)


state 122

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID . $@9 ',' VTYPE ID

    $default  reduce using rule 17 ($@9)

    $@9  go to state 133


state 123

   35 DECLARE_STMT: CHAR ID EQ char_val $@13 '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 134
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 124

   38 IDS: ',' ID $@14 . IDS

    ','  shift, and go to state 86

    $default  reduce using rule 36 (IDS)

    IDS  go to state 135


state 125

   33 DECLARE_STMT: CHAR ID $@12 IDS '$' STMTS .

    $default  reduce using rule 33 (DECLARE_STMT)


state 126

   31 DECLARE_STMT: INT ID EQ EXP $@11 '$' . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 136
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 127

   29 DECLARE_STMT: INT ID $@10 IDS '$' STMTS .

    $default  reduce using rule 29 (DECLARE_STMT)


state 128

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' . STMTS '}' $@17 STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 137
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 129

   46 IF_STMT: IF $@18 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 138
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 130

   56 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   57        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 139


state 131

   54 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 54 (FUNC_CALL)


state 132

   40 ASSIGN_STMT: ID EQ EXP '$' $@15 STMTS .

    $default  reduce using rule 40 (ASSIGN_STMT)


state 133

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 . ',' VTYPE ID

    ','  shift, and go to state 140


state 134

   35 DECLARE_STMT: CHAR ID EQ char_val $@13 '$' STMTS .

    $default  reduce using rule 35 (DECLARE_STMT)


state 135

   38 IDS: ',' ID $@14 IDS .

    $default  reduce using rule 38 (IDS)


state 136

   31 DECLARE_STMT: INT ID EQ EXP $@11 '$' STMTS .

    $default  reduce using rule 31 (DECLARE_STMT)


state 137

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' STMTS . '}' $@17 STMTS

    '}'  shift, and go to state 141


state 138

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@19 STMTS

    '}'  shift, and go to state 142


state 139

   56 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   57        | EXP ',' EXP ',' EXP .
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    ','       shift, and go to state 143
    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 57 (ARGS_IN)


state 140

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' . VTYPE ID

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    VTYPE  go to state 144


state 141

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' STMTS '}' . $@17 STMTS

    $default  reduce using rule 42 ($@17)

    $@17  go to state 145


state 142

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@19 STMTS

    ELSEIF  shift, and go to state 146

    $default  reduce using rule 50 (ELSEIF_STMT)

    ELSEIF_STMT  go to state 147


state 143

   56 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 148


state 144

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE . ID

    ID  shift, and go to state 149


state 145

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' STMTS '}' $@17 . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 150
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 146

   49 ELSEIF_STMT: ELSEIF . $@20 '(' EXP ')' '{' STMTS '}' $@21 ELSEIF

    $default  reduce using rule 47 ($@20)

    $@20  go to state 151


state 147

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@19 STMTS

    ELSE  shift, and go to state 152

    $default  reduce using rule 53 (ELSE_STMT)

    ELSE_STMT  go to state 153


state 148

   56 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75

    $default  reduce using rule 56 (ARGS_IN)


state 149

   18 PARAMS: VTYPE ID $@7 ',' VTYPE ID $@8 ',' VTYPE ID $@9 ',' VTYPE ID .

    $default  reduce using rule 18 (PARAMS)


state 150

   43 WHILE_STMT: WHILE $@16 '(' EXP ')' '{' STMTS '}' $@17 STMTS .

    $default  reduce using rule 43 (WHILE_STMT)


state 151

   49 ELSEIF_STMT: ELSEIF $@20 . '(' EXP ')' '{' STMTS '}' $@21 ELSEIF

    '('  shift, and go to state 154


state 152

   52 ELSE_STMT: ELSE . $@22 '{' STMTS '}'

    $default  reduce using rule 51 ($@22)

    $@22  go to state 155


state 153

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@19 STMTS

    $default  reduce using rule 45 ($@19)

    $@19  go to state 156


state 154

   49 ELSEIF_STMT: ELSEIF $@20 '(' . EXP ')' '{' STMTS '}' $@21 ELSEIF

    INTVAL    shift, and go to state 44
    char_val  shift, and go to state 45
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47
    '('       shift, and go to state 48
    ID        shift, and go to state 49

    EXP  go to state 157


state 155

   52 ELSE_STMT: ELSE $@22 . '{' STMTS '}'

    '{'  shift, and go to state 158


state 156

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 . STMTS

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 159
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 157

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP . ')' '{' STMTS '}' $@21 ELSEIF
   61 EXP: EXP . ISEQ EXP
   62    | EXP . ISNOTEQ EXP
   63    | EXP . '+' EXP
   64    | EXP . '-' EXP
   65    | EXP . '*' EXP
   66    | EXP . '/' EXP
   68    | EXP . COND_AND EXP
   69    | EXP . COND_OR EXP
   70    | EXP . LOG_OR EXP
   71    | EXP . LOG_AND EXP
   72    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 65
    COND_AND  shift, and go to state 66
    LOG_OR    shift, and go to state 67
    LOG_XOR   shift, and go to state 68
    LOG_AND   shift, and go to state 69
    ISNOTEQ   shift, and go to state 70
    ISEQ      shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    ')'       shift, and go to state 160


state 158

   52 ELSE_STMT: ELSE $@22 '{' . STMTS '}'

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 161
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 159

   46 IF_STMT: IF $@18 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@19 STMTS .

    $default  reduce using rule 46 (IF_STMT)


state 160

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' . '{' STMTS '}' $@21 ELSEIF

    '{'  shift, and go to state 162


state 161

   52 ELSE_STMT: ELSE $@22 '{' STMTS . '}'

    '}'  shift, and go to state 163


state 162

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' . STMTS '}' $@21 ELSEIF

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    WHILE   shift, and go to state 29
    IF      shift, and go to state 30
    ID      shift, and go to state 31

    $default  reduce using rule 27 (STMTS)

    STMTS         go to state 164
    DECLARE_STMT  go to state 33
    ASSIGN_STMT   go to state 34
    WHILE_STMT    go to state 35
    IF_STMT       go to state 36
    FUNC_CALL     go to state 37
    RETURN_STMT   go to state 38


state 163

   52 ELSE_STMT: ELSE $@22 '{' STMTS '}' .

    $default  reduce using rule 52 (ELSE_STMT)


state 164

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' STMTS . '}' $@21 ELSEIF

    '}'  shift, and go to state 165


state 165

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' STMTS '}' . $@21 ELSEIF

    $default  reduce using rule 48 ($@21)

    $@21  go to state 166


state 166

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' STMTS '}' $@21 . ELSEIF

    ELSEIF  shift, and go to state 167


state 167

   49 ELSEIF_STMT: ELSEIF $@20 '(' EXP ')' '{' STMTS '}' $@21 ELSEIF .

    $default  reduce using rule 49 (ELSEIF_STMT)
