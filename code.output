Terminals unused in grammar

   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   FOR
   NUM


Grammar

    0 $accept: start $end

    1 $@1: /* empty */

    2 start: $@1 PROGRAM

    3 $@2: /* empty */

    4 $@3: /* empty */

    5 $@4: /* empty */

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM
    7        | /* empty */

    8 FUNNAME: ID
    9        | MAIN

   10 FTYPE: VOID
   11      | INT

   12 PARAMS: /* empty */
   13       | VTYPE ID
   14       | THREE_ID ',' VTYPE ID
   15       | THREE_ID THREE_ID_COMMA ',' VTYPE ID
   16       | THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID

   17 VTYPE: CHAR
   18      | INT

   19 THREE_ID: VTYPE ID

   20 THREE_ID_COMMA: ',' VTYPE ID

   21 STMTS: DECLARE_STMT
   22      | ASSIGN_STMT
   23      | WHILE_STMT
   24      | IF_STMT
   25      | FUNC_CALL
   26      | RETURN_STMT
   27      | /* empty */

   28 $@5: /* empty */

   29 DECLARE_STMT: INT ID $@5 IDS '$' STMTS

   30 $@6: /* empty */

   31 DECLARE_STMT: INT ID EQ EXP $@6 '$' STMTS

   32 $@7: /* empty */

   33 DECLARE_STMT: CHAR ID $@7 IDS '$' STMTS

   34 $@8: /* empty */

   35 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' STMTS

   36 IDS: /* empty */

   37 $@9: /* empty */

   38 IDS: ',' ID $@9 IDS

   39 $@10: /* empty */

   40 ASSIGN_STMT: ID EQ EXP '$' $@10 STMTS

   41 $@11: /* empty */

   42 $@12: /* empty */

   43 $@13: /* empty */

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

   45 $@14: /* empty */

   46 $@15: /* empty */

   47 $@16: /* empty */

   48 $@17: /* empty */

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

   50 $@18: /* empty */

   51 $@19: /* empty */

   52 $@20: /* empty */

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT
   54            | ELSE_STMT

   55 $@21: /* empty */

   56 ELSE_STMT: ELSE $@21 '{' STMTS '}'
   57          | /* empty */

   58 $@22: /* empty */

   59 $@23: /* empty */

   60 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 STMTS

   61 $@24: /* empty */

   62 $@25: /* empty */

   63 $@26: /* empty */

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

   65 ARGS_IN: /* empty */
   66        | EXP ',' EXP ',' EXP ',' EXP
   67        | EXP ',' EXP ',' EXP
   68        | EXP ',' EXP
   69        | EXP

   70 $@27: /* empty */

   71 RETURN_STMT: RETURN EXP '$' $@27 STMTS

   72 EXP: EXP ISEQ EXP
   73    | EXP ISNOTEQ EXP
   74    | EXP '+' EXP
   75    | EXP '-' EXP
   76    | EXP '*' EXP
   77    | EXP '/' EXP
   78    | INTVAL
   79    | EXP ISLOWER EXP
   80    | EXP ISHIGHER EXP
   81    | EXP ISLOWERANDEQ EXP
   82    | EXP ISHIGHERANDEQ EXP
   83    | EXP COND_AND EXP
   84    | EXP COND_OR EXP
   85    | EXP LOG_OR EXP
   86    | EXP LOG_AND EXP
   87    | EXP LOG_XOR EXP
   88    | NOT EXP
   89    | '(' EXP ')'
   90    | char_val
   91    | ID
   92    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 29 31 33 35 40 60 64 71
'(' (40) 6 44 49 53 60 64 89
')' (41) 6 44 49 53 60 64 89
'*' (42) 76
'+' (43) 74
',' (44) 14 15 16 20 38 66 67 68
'-' (45) 75 92
'/' (47) 77
'[' (91)
']' (93)
'{' (123) 6 44 49 53 56
'}' (125) 6 44 49 53 56
error (256)
INTVAL (258) 78
char_val (259) 90
COND_OR (260) 84
COND_AND (261) 83
LOG_OR (262) 85
LOG_XOR (263) 87
LOG_AND (264) 86
ISNOTEQ (265) 73
ISEQ (266) 72
ISHIGHERANDEQ (267) 82
ISHIGHER (268) 80
ISLOWERANDEQ (269) 81
ISLOWER (270) 79
NOT (271) 88
VALUE_ID (272)
EQ (273) 31 35 40 64
MULTI_COMMENT (274)
COMMENT (275)
CHAR (276) 17 33 35
INT (277) 11 18 29 31
CONTINUE (278)
BREAK (279)
RETURN (280) 71
MAIN (281) 9
FOR (282)
VOID (283) 10
ELSE (284) 56
ELSEIF (285) 53
WHILE (286) 44
IF (287) 49
NUM (288)
ID (289) 8 13 14 15 16 19 20 29 31 33 35 38 40 60 64 91


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
EXP (48)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90 91 92, on right: 31 35 40 44 49 53 66 67 68 69 71 72 73 74 75
    76 77 79 80 81 82 83 84 85 86 87 88 89 92
FTYPE (49)
    on left: 10 11, on right: 6
VTYPE (50)
    on left: 17 18, on right: 13 14 15 16 19 20
FUNNAME (51)
    on left: 8 9, on right: 6
PARAMS (52)
    on left: 12 13 14 15 16, on right: 6
FUNC_CALL (53)
    on left: 60 64, on right: 25
ARGS_IN (54)
    on left: 65 66 67 68 69, on right: 60 64
start (55)
    on left: 2, on right: 0
$@1 (56)
    on left: 1, on right: 2
PROGRAM (57)
    on left: 6 7, on right: 2 6
$@2 (58)
    on left: 3, on right: 6
$@3 (59)
    on left: 4, on right: 6
$@4 (60)
    on left: 5, on right: 6
THREE_ID (61)
    on left: 19, on right: 14 15 16
THREE_ID_COMMA (62)
    on left: 20, on right: 15 16
STMTS (63)
    on left: 21 22 23 24 25 26 27, on right: 6 29 31 33 35 40 44 49
    53 56 60 64 71
DECLARE_STMT (64)
    on left: 29 31 33 35, on right: 21
$@5 (65)
    on left: 28, on right: 29
$@6 (66)
    on left: 30, on right: 31
$@7 (67)
    on left: 32, on right: 33
$@8 (68)
    on left: 34, on right: 35
IDS (69)
    on left: 36 38, on right: 29 33 38
$@9 (70)
    on left: 37, on right: 38
ASSIGN_STMT (71)
    on left: 40, on right: 22
$@10 (72)
    on left: 39, on right: 40
WHILE_STMT (73)
    on left: 44, on right: 23
$@11 (74)
    on left: 41, on right: 44
$@12 (75)
    on left: 42, on right: 44
$@13 (76)
    on left: 43, on right: 44
IF_STMT (77)
    on left: 49, on right: 24
$@14 (78)
    on left: 45, on right: 49
$@15 (79)
    on left: 46, on right: 49
$@16 (80)
    on left: 47, on right: 49
$@17 (81)
    on left: 48, on right: 49
ELSEIF_STMT (82)
    on left: 53 54, on right: 49 53
$@18 (83)
    on left: 50, on right: 53
$@19 (84)
    on left: 51, on right: 53
$@20 (85)
    on left: 52, on right: 53
ELSE_STMT (86)
    on left: 56 57, on right: 54
$@21 (87)
    on left: 55, on right: 56
$@22 (88)
    on left: 58, on right: 60
$@23 (89)
    on left: 59, on right: 60
$@24 (90)
    on left: 61, on right: 64
$@25 (91)
    on left: 62, on right: 64
$@26 (92)
    on left: 63, on right: 64
RETURN_STMT (93)
    on left: 71, on right: 26
$@27 (94)
    on left: 70, on right: 71


state 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


state 1

    0 $accept: start . $end

    $end  shift, and go to state 3


state 2

    2 start: $@1 . PROGRAM

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 7 (PROGRAM)

    FTYPE    go to state 6
    PROGRAM  go to state 7


state 3

    0 $accept: start $end .

    $default  accept


state 4

   11 FTYPE: INT .

    $default  reduce using rule 11 (FTYPE)


state 5

   10 FTYPE: VOID .

    $default  reduce using rule 10 (FTYPE)


state 6

    6 PROGRAM: FTYPE . FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    MAIN  shift, and go to state 8
    ID    shift, and go to state 9

    FUNNAME  go to state 10


state 7

    2 start: $@1 PROGRAM .

    $default  reduce using rule 2 (start)


state 8

    9 FUNNAME: MAIN .

    $default  reduce using rule 9 (FUNNAME)


state 9

    8 FUNNAME: ID .

    $default  reduce using rule 8 (FUNNAME)


state 10

    6 PROGRAM: FTYPE FUNNAME . $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    $default  reduce using rule 3 ($@2)

    $@2  go to state 11


state 11

    6 PROGRAM: FTYPE FUNNAME $@2 . '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    '('  shift, and go to state 12


state 12

    6 PROGRAM: FTYPE FUNNAME $@2 '(' . PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM

    CHAR  shift, and go to state 13
    INT   shift, and go to state 14

    $default  reduce using rule 12 (PARAMS)

    VTYPE     go to state 15
    PARAMS    go to state 16
    THREE_ID  go to state 17


state 13

   17 VTYPE: CHAR .

    $default  reduce using rule 17 (VTYPE)


state 14

   18 VTYPE: INT .

    $default  reduce using rule 18 (VTYPE)


state 15

   13 PARAMS: VTYPE . ID
   19 THREE_ID: VTYPE . ID

    ID  shift, and go to state 18


state 16

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS . $@3 ')' '{' STMTS '}' $@4 PROGRAM

    $default  reduce using rule 4 ($@3)

    $@3  go to state 19


state 17

   14 PARAMS: THREE_ID . ',' VTYPE ID
   15       | THREE_ID . THREE_ID_COMMA ',' VTYPE ID
   16       | THREE_ID . THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID

    ','  shift, and go to state 20

    THREE_ID_COMMA  go to state 21


state 18

   13 PARAMS: VTYPE ID .
   19 THREE_ID: VTYPE ID .

    ','       reduce using rule 19 (THREE_ID)
    $default  reduce using rule 13 (PARAMS)


state 19

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 . ')' '{' STMTS '}' $@4 PROGRAM

    ')'  shift, and go to state 22


state 20

   14 PARAMS: THREE_ID ',' . VTYPE ID
   20 THREE_ID_COMMA: ',' . VTYPE ID

    CHAR  shift, and go to state 13
    INT   shift, and go to state 14

    VTYPE  go to state 23


state 21

   15 PARAMS: THREE_ID THREE_ID_COMMA . ',' VTYPE ID
   16       | THREE_ID THREE_ID_COMMA . THREE_ID_COMMA ',' VTYPE ID

    ','  shift, and go to state 24

    THREE_ID_COMMA  go to state 25


state 22

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' . '{' STMTS '}' $@4 PROGRAM

    '{'  shift, and go to state 26


state 23

   14 PARAMS: THREE_ID ',' VTYPE . ID
   20 THREE_ID_COMMA: ',' VTYPE . ID

    ID  shift, and go to state 27


state 24

   15 PARAMS: THREE_ID THREE_ID_COMMA ',' . VTYPE ID
   20 THREE_ID_COMMA: ',' . VTYPE ID

    CHAR  shift, and go to state 13
    INT   shift, and go to state 14

    VTYPE  go to state 28


state 25

   16 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA . ',' VTYPE ID

    ','  shift, and go to state 29


state 26

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' . STMTS '}' $@4 PROGRAM

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 37
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 27

   14 PARAMS: THREE_ID ',' VTYPE ID .
   20 THREE_ID_COMMA: ',' VTYPE ID .

    ','       reduce using rule 20 (THREE_ID_COMMA)
    $default  reduce using rule 14 (PARAMS)


state 28

   15 PARAMS: THREE_ID THREE_ID_COMMA ',' VTYPE . ID
   20 THREE_ID_COMMA: ',' VTYPE . ID

    ID  shift, and go to state 43


state 29

   16 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' . VTYPE ID

    CHAR  shift, and go to state 13
    INT   shift, and go to state 14

    VTYPE  go to state 44


state 30

   33 DECLARE_STMT: CHAR . ID $@7 IDS '$' STMTS
   35             | CHAR . ID EQ EXP $@8 '$' STMTS

    ID  shift, and go to state 45


state 31

   29 DECLARE_STMT: INT . ID $@5 IDS '$' STMTS
   31             | INT . ID EQ EXP $@6 '$' STMTS

    ID  shift, and go to state 46


state 32

   71 RETURN_STMT: RETURN . EXP '$' $@27 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 53


state 33

   44 WHILE_STMT: WHILE . $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    $default  reduce using rule 41 ($@11)

    $@11  go to state 54


state 34

   49 IF_STMT: IF . $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 45 ($@14)

    $@14  go to state 55


state 35

   40 ASSIGN_STMT: ID . EQ EXP '$' $@10 STMTS
   60 FUNC_CALL: ID . $@22 '(' ARGS_IN ')' '$' $@23 STMTS
   64          | ID . EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    EQ  shift, and go to state 56

    $default  reduce using rule 58 ($@22)

    $@22  go to state 57


state 36

   25 STMTS: FUNC_CALL .

    $default  reduce using rule 25 (STMTS)


state 37

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS . '}' $@4 PROGRAM

    '}'  shift, and go to state 58


state 38

   21 STMTS: DECLARE_STMT .

    $default  reduce using rule 21 (STMTS)


state 39

   22 STMTS: ASSIGN_STMT .

    $default  reduce using rule 22 (STMTS)


state 40

   23 STMTS: WHILE_STMT .

    $default  reduce using rule 23 (STMTS)


state 41

   24 STMTS: IF_STMT .

    $default  reduce using rule 24 (STMTS)


state 42

   26 STMTS: RETURN_STMT .

    $default  reduce using rule 26 (STMTS)


state 43

   15 PARAMS: THREE_ID THREE_ID_COMMA ',' VTYPE ID .
   20 THREE_ID_COMMA: ',' VTYPE ID .

    ','       reduce using rule 20 (THREE_ID_COMMA)
    $default  reduce using rule 15 (PARAMS)


state 44

   16 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE . ID

    ID  shift, and go to state 59


state 45

   33 DECLARE_STMT: CHAR ID . $@7 IDS '$' STMTS
   35             | CHAR ID . EQ EXP $@8 '$' STMTS

    EQ  shift, and go to state 60

    $default  reduce using rule 32 ($@7)

    $@7  go to state 61


state 46

   29 DECLARE_STMT: INT ID . $@5 IDS '$' STMTS
   31             | INT ID . EQ EXP $@6 '$' STMTS

    EQ  shift, and go to state 62

    $default  reduce using rule 28 ($@5)

    $@5  go to state 63


state 47

   78 EXP: INTVAL .

    $default  reduce using rule 78 (EXP)


state 48

   90 EXP: char_val .

    $default  reduce using rule 90 (EXP)


state 49

   92 EXP: '-' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 64


state 50

   88 EXP: NOT . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 65


state 51

   89 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 66


state 52

   91 EXP: ID .

    $default  reduce using rule 91 (EXP)


state 53

   71 RETURN_STMT: RETURN EXP . '$' $@27 STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    '$'            shift, and go to state 82


state 54

   44 WHILE_STMT: WHILE $@11 . '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    '('  shift, and go to state 83


state 55

   49 IF_STMT: IF $@14 . '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    '('  shift, and go to state 84


state 56

   40 ASSIGN_STMT: ID EQ . EXP '$' $@10 STMTS
   64 FUNC_CALL: ID EQ . ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 85

    EXP  go to state 86


state 57

   60 FUNC_CALL: ID $@22 . '(' ARGS_IN ')' '$' $@23 STMTS

    '('  shift, and go to state 87


state 58

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS '}' . $@4 PROGRAM

    $default  reduce using rule 5 ($@4)

    $@4  go to state 88


state 59

   16 PARAMS: THREE_ID THREE_ID_COMMA THREE_ID_COMMA ',' VTYPE ID .

    $default  reduce using rule 16 (PARAMS)


state 60

   35 DECLARE_STMT: CHAR ID EQ . EXP $@8 '$' STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 89


state 61

   33 DECLARE_STMT: CHAR ID $@7 . IDS '$' STMTS

    ','  shift, and go to state 90

    $default  reduce using rule 36 (IDS)

    IDS  go to state 91


state 62

   31 DECLARE_STMT: INT ID EQ . EXP $@6 '$' STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 92


state 63

   29 DECLARE_STMT: INT ID $@5 . IDS '$' STMTS

    ','  shift, and go to state 90

    $default  reduce using rule 36 (IDS)

    IDS  go to state 93


state 64

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP
   92    | '-' EXP .

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 92 (EXP)


state 65

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP
   88    | NOT EXP .

    $default  reduce using rule 88 (EXP)


state 66

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP
   89    | '(' EXP . ')'

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    ')'            shift, and go to state 94


state 67

   84 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 95


state 68

   83 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 96


state 69

   85 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 97


state 70

   87 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 98


state 71

   86 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 99


state 72

   73 EXP: EXP ISNOTEQ . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 100


state 73

   72 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 101


state 74

   82 EXP: EXP ISHIGHERANDEQ . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 102


state 75

   80 EXP: EXP ISHIGHER . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 103


state 76

   81 EXP: EXP ISLOWERANDEQ . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 104


state 77

   79 EXP: EXP ISLOWER . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 105


state 78

   74 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 106


state 79

   75 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 107


state 80

   76 EXP: EXP '*' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 108


state 81

   77 EXP: EXP '/' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 109


state 82

   71 RETURN_STMT: RETURN EXP '$' . $@27 STMTS

    $default  reduce using rule 70 ($@27)

    $@27  go to state 110


state 83

   44 WHILE_STMT: WHILE $@11 '(' . EXP ')' $@12 '{' STMTS '}' $@13 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 111


state 84

   49 IF_STMT: IF $@14 '(' . EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 112


state 85

   64 FUNC_CALL: ID EQ ID . $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS
   91 EXP: ID .

    '('       reduce using rule 61 ($@24)
    $default  reduce using rule 91 (EXP)

    $@24  go to state 113


state 86

   40 ASSIGN_STMT: ID EQ EXP . '$' $@10 STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    '$'            shift, and go to state 114


state 87

   60 FUNC_CALL: ID $@22 '(' . ARGS_IN ')' '$' $@23 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    $default  reduce using rule 65 (ARGS_IN)

    EXP      go to state 115
    ARGS_IN  go to state 116


state 88

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 . PROGRAM

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 7 (PROGRAM)

    FTYPE    go to state 6
    PROGRAM  go to state 117


state 89

   35 DECLARE_STMT: CHAR ID EQ EXP . $@8 '$' STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 34 ($@8)

    $@8  go to state 118


state 90

   38 IDS: ',' . ID $@9 IDS

    ID  shift, and go to state 119


state 91

   33 DECLARE_STMT: CHAR ID $@7 IDS . '$' STMTS

    '$'  shift, and go to state 120


state 92

   31 DECLARE_STMT: INT ID EQ EXP . $@6 '$' STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 30 ($@6)

    $@6  go to state 121


state 93

   29 DECLARE_STMT: INT ID $@5 IDS . '$' STMTS

    '$'  shift, and go to state 122


state 94

   89 EXP: '(' EXP ')' .

    $default  reduce using rule 89 (EXP)


state 95

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   84    | EXP COND_OR EXP .
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 84 (EXP)


state 96

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   83    | EXP COND_AND EXP .
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 83 (EXP)


state 97

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   85    | EXP LOG_OR EXP .
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 85 (EXP)


state 98

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP
   87    | EXP LOG_XOR EXP .

    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 87 (EXP)


state 99

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   86    | EXP LOG_AND EXP .
   87    | EXP . LOG_XOR EXP

    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 86 (EXP)


state 100

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   73    | EXP ISNOTEQ EXP .
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 73 (EXP)


state 101

   72 EXP: EXP . ISEQ EXP
   72    | EXP ISEQ EXP .
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 72 (EXP)


state 102

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   82    | EXP ISHIGHERANDEQ EXP .
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 82 (EXP)


state 103

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   80    | EXP ISHIGHER EXP .
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 80 (EXP)


state 104

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   81    | EXP ISLOWERANDEQ EXP .
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 81 (EXP)


state 105

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   79    | EXP ISLOWER EXP .
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 79 (EXP)


state 106

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   74    | EXP '+' EXP .
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 74 (EXP)


state 107

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   75    | EXP '-' EXP .
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81

    $default  reduce using rule 75 (EXP)


state 108

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   76    | EXP '*' EXP .
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    $default  reduce using rule 76 (EXP)


state 109

   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   77    | EXP '/' EXP .
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    $default  reduce using rule 77 (EXP)


state 110

   71 RETURN_STMT: RETURN EXP '$' $@27 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 123
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 111

   44 WHILE_STMT: WHILE $@11 '(' EXP . ')' $@12 '{' STMTS '}' $@13 STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    ')'            shift, and go to state 124


state 112

   49 IF_STMT: IF $@14 '(' EXP . ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    ')'            shift, and go to state 125


state 113

   64 FUNC_CALL: ID EQ ID $@24 . '(' ARGS_IN ')' '$' $@25 $@26 STMTS

    '('  shift, and go to state 126


state 114

   40 ASSIGN_STMT: ID EQ EXP '$' . $@10 STMTS

    $default  reduce using rule 39 ($@10)

    $@10  go to state 127


state 115

   66 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   67        | EXP . ',' EXP ',' EXP
   68        | EXP . ',' EXP
   69        | EXP .
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    ','            shift, and go to state 128
    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 69 (ARGS_IN)


state 116

   60 FUNC_CALL: ID $@22 '(' ARGS_IN . ')' '$' $@23 STMTS

    ')'  shift, and go to state 129


state 117

    6 PROGRAM: FTYPE FUNNAME $@2 '(' PARAMS $@3 ')' '{' STMTS '}' $@4 PROGRAM .

    $default  reduce using rule 6 (PROGRAM)


state 118

   35 DECLARE_STMT: CHAR ID EQ EXP $@8 . '$' STMTS

    '$'  shift, and go to state 130


state 119

   38 IDS: ',' ID . $@9 IDS

    $default  reduce using rule 37 ($@9)

    $@9  go to state 131


state 120

   33 DECLARE_STMT: CHAR ID $@7 IDS '$' . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 132
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 121

   31 DECLARE_STMT: INT ID EQ EXP $@6 . '$' STMTS

    '$'  shift, and go to state 133


state 122

   29 DECLARE_STMT: INT ID $@5 IDS '$' . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 134
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 123

   71 RETURN_STMT: RETURN EXP '$' $@27 STMTS .

    $default  reduce using rule 71 (RETURN_STMT)


state 124

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' . $@12 '{' STMTS '}' $@13 STMTS

    $default  reduce using rule 42 ($@12)

    $@12  go to state 135


state 125

   49 IF_STMT: IF $@14 '(' EXP ')' . $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 46 ($@15)

    $@15  go to state 136


state 126

   64 FUNC_CALL: ID EQ ID $@24 '(' . ARGS_IN ')' '$' $@25 $@26 STMTS

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    $default  reduce using rule 65 (ARGS_IN)

    EXP      go to state 115
    ARGS_IN  go to state 137


state 127

   40 ASSIGN_STMT: ID EQ EXP '$' $@10 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 138
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 128

   66 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   67        | EXP ',' . EXP ',' EXP
   68        | EXP ',' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 139


state 129

   60 FUNC_CALL: ID $@22 '(' ARGS_IN ')' . '$' $@23 STMTS

    '$'  shift, and go to state 140


state 130

   35 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 141
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 131

   38 IDS: ',' ID $@9 . IDS

    ','  shift, and go to state 90

    $default  reduce using rule 36 (IDS)

    IDS  go to state 142


state 132

   33 DECLARE_STMT: CHAR ID $@7 IDS '$' STMTS .

    $default  reduce using rule 33 (DECLARE_STMT)


state 133

   31 DECLARE_STMT: INT ID EQ EXP $@6 '$' . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 143
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 134

   29 DECLARE_STMT: INT ID $@5 IDS '$' STMTS .

    $default  reduce using rule 29 (DECLARE_STMT)


state 135

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 . '{' STMTS '}' $@13 STMTS

    '{'  shift, and go to state 144


state 136

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 . '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    '{'  shift, and go to state 145


state 137

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN . ')' '$' $@25 $@26 STMTS

    ')'  shift, and go to state 146


state 138

   40 ASSIGN_STMT: ID EQ EXP '$' $@10 STMTS .

    $default  reduce using rule 40 (ASSIGN_STMT)


state 139

   66 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   67        | EXP ',' EXP . ',' EXP
   68        | EXP ',' EXP .
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    ','            shift, and go to state 147
    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 68 (ARGS_IN)


state 140

   60 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' . $@23 STMTS

    $default  reduce using rule 59 ($@23)

    $@23  go to state 148


state 141

   35 DECLARE_STMT: CHAR ID EQ EXP $@8 '$' STMTS .

    $default  reduce using rule 35 (DECLARE_STMT)


state 142

   38 IDS: ',' ID $@9 IDS .

    $default  reduce using rule 38 (IDS)


state 143

   31 DECLARE_STMT: INT ID EQ EXP $@6 '$' STMTS .

    $default  reduce using rule 31 (DECLARE_STMT)


state 144

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' . STMTS '}' $@13 STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 149
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 145

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' . STMTS '}' $@16 ELSEIF_STMT $@17 STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 150
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 146

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' . '$' $@25 $@26 STMTS

    '$'  shift, and go to state 151


state 147

   66 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   67        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 152


state 148

   60 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 153
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 149

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS . '}' $@13 STMTS

    '}'  shift, and go to state 154


state 150

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS . '}' $@16 ELSEIF_STMT $@17 STMTS

    '}'  shift, and go to state 155


state 151

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' . $@25 $@26 STMTS

    $default  reduce using rule 62 ($@25)

    $@25  go to state 156


state 152

   66 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   67        | EXP ',' EXP ',' EXP .
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    ','            shift, and go to state 157
    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 67 (ARGS_IN)


state 153

   60 FUNC_CALL: ID $@22 '(' ARGS_IN ')' '$' $@23 STMTS .

    $default  reduce using rule 60 (FUNC_CALL)


state 154

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' . $@13 STMTS

    $default  reduce using rule 43 ($@13)

    $@13  go to state 158


state 155

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' . $@16 ELSEIF_STMT $@17 STMTS

    $default  reduce using rule 47 ($@16)

    $@16  go to state 159


state 156

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 . $@26 STMTS

    $default  reduce using rule 63 ($@26)

    $@26  go to state 160


state 157

   66 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 161


state 158

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 162
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 159

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 . ELSEIF_STMT $@17 STMTS

    ELSE    shift, and go to state 163
    ELSEIF  shift, and go to state 164

    $default  reduce using rule 57 (ELSE_STMT)

    ELSEIF_STMT  go to state 165
    ELSE_STMT    go to state 166


state 160

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 167
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 161

   66 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81

    $default  reduce using rule 66 (ARGS_IN)


state 162

   44 WHILE_STMT: WHILE $@11 '(' EXP ')' $@12 '{' STMTS '}' $@13 STMTS .

    $default  reduce using rule 44 (WHILE_STMT)


state 163

   56 ELSE_STMT: ELSE . $@21 '{' STMTS '}'

    $default  reduce using rule 55 ($@21)

    $@21  go to state 168


state 164

   53 ELSEIF_STMT: ELSEIF . $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    $default  reduce using rule 50 ($@18)

    $@18  go to state 169


state 165

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT . $@17 STMTS

    $default  reduce using rule 48 ($@17)

    $@17  go to state 170


state 166

   54 ELSEIF_STMT: ELSE_STMT .

    $default  reduce using rule 54 (ELSEIF_STMT)


state 167

   64 FUNC_CALL: ID EQ ID $@24 '(' ARGS_IN ')' '$' $@25 $@26 STMTS .

    $default  reduce using rule 64 (FUNC_CALL)


state 168

   56 ELSE_STMT: ELSE $@21 . '{' STMTS '}'

    '{'  shift, and go to state 171


state 169

   53 ELSEIF_STMT: ELSEIF $@18 . '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    '('  shift, and go to state 172


state 170

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 . STMTS

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 173
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 171

   56 ELSE_STMT: ELSE $@21 '{' . STMTS '}'

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 174
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 172

   53 ELSEIF_STMT: ELSEIF $@18 '(' . EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    INTVAL    shift, and go to state 47
    char_val  shift, and go to state 48
    '-'       shift, and go to state 49
    NOT       shift, and go to state 50
    '('       shift, and go to state 51
    ID        shift, and go to state 52

    EXP  go to state 175


state 173

   49 IF_STMT: IF $@14 '(' EXP ')' $@15 '{' STMTS '}' $@16 ELSEIF_STMT $@17 STMTS .

    $default  reduce using rule 49 (IF_STMT)


state 174

   56 ELSE_STMT: ELSE $@21 '{' STMTS . '}'

    '}'  shift, and go to state 176


state 175

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP . ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT
   72 EXP: EXP . ISEQ EXP
   73    | EXP . ISNOTEQ EXP
   74    | EXP . '+' EXP
   75    | EXP . '-' EXP
   76    | EXP . '*' EXP
   77    | EXP . '/' EXP
   79    | EXP . ISLOWER EXP
   80    | EXP . ISHIGHER EXP
   81    | EXP . ISLOWERANDEQ EXP
   82    | EXP . ISHIGHERANDEQ EXP
   83    | EXP . COND_AND EXP
   84    | EXP . COND_OR EXP
   85    | EXP . LOG_OR EXP
   86    | EXP . LOG_AND EXP
   87    | EXP . LOG_XOR EXP

    COND_OR        shift, and go to state 67
    COND_AND       shift, and go to state 68
    LOG_OR         shift, and go to state 69
    LOG_XOR        shift, and go to state 70
    LOG_AND        shift, and go to state 71
    ISNOTEQ        shift, and go to state 72
    ISEQ           shift, and go to state 73
    ISHIGHERANDEQ  shift, and go to state 74
    ISHIGHER       shift, and go to state 75
    ISLOWERANDEQ   shift, and go to state 76
    ISLOWER        shift, and go to state 77
    '+'            shift, and go to state 78
    '-'            shift, and go to state 79
    '*'            shift, and go to state 80
    '/'            shift, and go to state 81
    ')'            shift, and go to state 177


state 176

   56 ELSE_STMT: ELSE $@21 '{' STMTS '}' .

    $default  reduce using rule 56 (ELSE_STMT)


state 177

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' . $@19 '{' STMTS '}' $@20 ELSEIF_STMT

    $default  reduce using rule 51 ($@19)

    $@19  go to state 178


state 178

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 . '{' STMTS '}' $@20 ELSEIF_STMT

    '{'  shift, and go to state 179


state 179

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' . STMTS '}' $@20 ELSEIF_STMT

    CHAR    shift, and go to state 30
    INT     shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    IF      shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 27 (STMTS)

    FUNC_CALL     go to state 36
    STMTS         go to state 180
    DECLARE_STMT  go to state 38
    ASSIGN_STMT   go to state 39
    WHILE_STMT    go to state 40
    IF_STMT       go to state 41
    RETURN_STMT   go to state 42


state 180

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS . '}' $@20 ELSEIF_STMT

    '}'  shift, and go to state 181


state 181

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' . $@20 ELSEIF_STMT

    $default  reduce using rule 52 ($@20)

    $@20  go to state 182


state 182

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 . ELSEIF_STMT

    ELSE    shift, and go to state 163
    ELSEIF  shift, and go to state 164

    $default  reduce using rule 57 (ELSE_STMT)

    ELSEIF_STMT  go to state 183
    ELSE_STMT    go to state 166


state 183

   53 ELSEIF_STMT: ELSEIF $@18 '(' EXP ')' $@19 '{' STMTS '}' $@20 ELSEIF_STMT .

    $default  reduce using rule 53 (ELSEIF_STMT)
