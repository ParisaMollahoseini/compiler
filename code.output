Terminals unused in grammar

   ISHIGHERANDEQ
   ISHIGHER
   ISLOWERANDEQ
   ISLOWER
   '['
   ']'
   VALUE_ID
   MULTI_COMMENT
   COMMENT
   CONTINUE
   BREAK
   MAIN
   FOR
   NUM


Grammar

    0 $accept: PROGRAM $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 $@3: /* empty */

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM
    5        | /* empty */

    6 FTYPE: VOID
    7      | INT

    8 PARAMS: /* empty */
    9       | VTYPE ID

   10 VTYPE: CHAR
   11      | INT

   12 STMTS: DECLARE_STMT
   13      | ASSIGN_STMT
   14      | WHILE_STMT
   15      | IF_STMT
   16      | FUNC_CALL
   17      | RETURN_STMT
   18      | /* empty */

   19 $@4: /* empty */

   20 DECLARE_STMT: INT ID $@4 IDS '$' STMTS

   21 $@5: /* empty */

   22 DECLARE_STMT: INT ID EQ EXP $@5 '$' STMTS

   23 $@6: /* empty */

   24 DECLARE_STMT: CHAR ID $@6 IDS '$' STMTS

   25 $@7: /* empty */

   26 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' STMTS

   27 IDS: /* empty */

   28 $@8: /* empty */

   29 IDS: ',' ID $@8 IDS

   30 $@9: /* empty */

   31 ASSIGN_STMT: ID EQ EXP '$' $@9 STMTS

   32 $@10: /* empty */

   33 $@11: /* empty */

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS

   35 $@12: /* empty */

   36 $@13: /* empty */

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

   38 $@14: /* empty */

   39 $@15: /* empty */

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF
   41            | /* empty */

   42 $@16: /* empty */

   43 ELSE_STMT: ELSE $@16 '{' STMTS '}'
   44          | /* empty */

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS

   46 ARGS_IN: /* empty */
   47        | EXP ',' EXP ',' EXP ',' EXP
   48        | EXP ',' EXP ',' EXP
   49        | EXP ',' EXP
   50        | EXP

   51 RETURN_STMT: RETURN EXP '$' STMTS

   52 EXP: EXP ISEQ EXP
   53    | EXP ISNOTEQ EXP
   54    | EXP '+' EXP
   55    | EXP '-' EXP
   56    | EXP '*' EXP
   57    | EXP '/' EXP
   58    | INTVAL
   59    | EXP COND_AND EXP
   60    | EXP COND_OR EXP
   61    | EXP LOG_OR EXP
   62    | EXP LOG_AND EXP
   63    | EXP LOG_XOR EXP
   64    | NOT EXP
   65    | '(' EXP ')'
   66    | char_val
   67    | ID
   68    | '-' EXP


Terminals, with rules where they appear

$end (0) 0
'$' (36) 20 22 24 26 31 45 51
'(' (40) 4 34 37 40 45 65
')' (41) 4 34 37 40 45 65
'*' (42) 56
'+' (43) 54
',' (44) 29 47 48 49
'-' (45) 55 68
'/' (47) 57
'[' (91)
']' (93)
'{' (123) 4 34 37 40 43
'}' (125) 4 34 37 40 43
error (256)
INTVAL (258) 58
char_val (259) 26 66
COND_OR (260) 60
COND_AND (261) 59
LOG_OR (262) 61
LOG_XOR (263) 63
LOG_AND (264) 62
ISNOTEQ (265) 53
ISEQ (266) 52
ISHIGHERANDEQ (267)
ISHIGHER (268)
ISLOWERANDEQ (269)
ISLOWER (270)
NOT (271) 64
VALUE_ID (272)
EQ (273) 22 26 31
MULTI_COMMENT (274)
COMMENT (275)
CHAR (276) 10 24 26
INT (277) 7 11 20 22
CONTINUE (278)
BREAK (279)
RETURN (280) 51
MAIN (281)
FOR (282)
VOID (283) 6
ELSE (284) 43
ELSEIF (285) 40
WHILE (286) 34
IF (287) 37
NUM (288)
ID (289) 4 9 20 22 24 26 29 31 45 67


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
EXP (48)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68, on right:
    22 31 34 37 40 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63
    64 65 68
VTYPE (49)
    on left: 10 11, on right: 9
PARAMS (50)
    on left: 8 9, on right: 4
ARGS_IN (51)
    on left: 46 47 48 49 50, on right: 45
PROGRAM (52)
    on left: 4 5, on right: 0 4
$@1 (53)
    on left: 1, on right: 4
$@2 (54)
    on left: 2, on right: 4
$@3 (55)
    on left: 3, on right: 4
FTYPE (56)
    on left: 6 7, on right: 4
STMTS (57)
    on left: 12 13 14 15 16 17 18, on right: 4 20 22 24 26 31 34 37
    40 43 45 51
DECLARE_STMT (58)
    on left: 20 22 24 26, on right: 12
$@4 (59)
    on left: 19, on right: 20
$@5 (60)
    on left: 21, on right: 22
$@6 (61)
    on left: 23, on right: 24
$@7 (62)
    on left: 25, on right: 26
IDS (63)
    on left: 27 29, on right: 20 24 29
$@8 (64)
    on left: 28, on right: 29
ASSIGN_STMT (65)
    on left: 31, on right: 13
$@9 (66)
    on left: 30, on right: 31
WHILE_STMT (67)
    on left: 34, on right: 14
$@10 (68)
    on left: 32, on right: 34
$@11 (69)
    on left: 33, on right: 34
IF_STMT (70)
    on left: 37, on right: 15
$@12 (71)
    on left: 35, on right: 37
$@13 (72)
    on left: 36, on right: 37
ELSEIF_STMT (73)
    on left: 40 41, on right: 37
$@14 (74)
    on left: 38, on right: 40
$@15 (75)
    on left: 39, on right: 40
ELSE_STMT (76)
    on left: 43 44, on right: 37
$@16 (77)
    on left: 42, on right: 43
FUNC_CALL (78)
    on left: 45, on right: 16
RETURN_STMT (79)
    on left: 51, on right: 17


state 0

    0 $accept: . PROGRAM $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 3
    FTYPE    go to state 4


state 1

    7 FTYPE: INT .

    $default  reduce using rule 7 (FTYPE)


state 2

    6 FTYPE: VOID .

    $default  reduce using rule 6 (FTYPE)


state 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


state 4

    4 PROGRAM: FTYPE . ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    ID  shift, and go to state 6


state 5

    0 $accept: PROGRAM $end .

    $default  accept


state 6

    4 PROGRAM: FTYPE ID . $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


state 7

    4 PROGRAM: FTYPE ID $@1 . '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    '('  shift, and go to state 8


state 8

    4 PROGRAM: FTYPE ID $@1 '(' . PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM

    CHAR  shift, and go to state 9
    INT   shift, and go to state 10

    $default  reduce using rule 8 (PARAMS)

    VTYPE   go to state 11
    PARAMS  go to state 12


state 9

   10 VTYPE: CHAR .

    $default  reduce using rule 10 (VTYPE)


state 10

   11 VTYPE: INT .

    $default  reduce using rule 11 (VTYPE)


state 11

    9 PARAMS: VTYPE . ID

    ID  shift, and go to state 13


state 12

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS . $@2 ')' '{' STMTS '}' $@3 PROGRAM

    $default  reduce using rule 2 ($@2)

    $@2  go to state 14


state 13

    9 PARAMS: VTYPE ID .

    $default  reduce using rule 9 (PARAMS)


state 14

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 . ')' '{' STMTS '}' $@3 PROGRAM

    ')'  shift, and go to state 15


state 15

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' . '{' STMTS '}' $@3 PROGRAM

    '{'  shift, and go to state 16


state 16

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' . STMTS '}' $@3 PROGRAM

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 23
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 17

   24 DECLARE_STMT: CHAR . ID $@6 IDS '$' STMTS
   26             | CHAR . ID EQ char_val $@7 '$' STMTS

    ID  shift, and go to state 30


state 18

   20 DECLARE_STMT: INT . ID $@4 IDS '$' STMTS
   22             | INT . ID EQ EXP $@5 '$' STMTS

    ID  shift, and go to state 31


state 19

   51 RETURN_STMT: RETURN . EXP '$' STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 38


state 20

   34 WHILE_STMT: WHILE . $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS

    $default  reduce using rule 32 ($@10)

    $@10  go to state 39


state 21

   37 IF_STMT: IF . $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    $default  reduce using rule 35 ($@12)

    $@12  go to state 40


state 22

   31 ASSIGN_STMT: ID . EQ EXP '$' $@9 STMTS
   45 FUNC_CALL: ID . '(' ARGS_IN ')' '$' STMTS

    '('  shift, and go to state 41
    EQ   shift, and go to state 42


state 23

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS . '}' $@3 PROGRAM

    '}'  shift, and go to state 43


state 24

   12 STMTS: DECLARE_STMT .

    $default  reduce using rule 12 (STMTS)


state 25

   13 STMTS: ASSIGN_STMT .

    $default  reduce using rule 13 (STMTS)


state 26

   14 STMTS: WHILE_STMT .

    $default  reduce using rule 14 (STMTS)


state 27

   15 STMTS: IF_STMT .

    $default  reduce using rule 15 (STMTS)


state 28

   16 STMTS: FUNC_CALL .

    $default  reduce using rule 16 (STMTS)


state 29

   17 STMTS: RETURN_STMT .

    $default  reduce using rule 17 (STMTS)


state 30

   24 DECLARE_STMT: CHAR ID . $@6 IDS '$' STMTS
   26             | CHAR ID . EQ char_val $@7 '$' STMTS

    EQ  shift, and go to state 44

    $default  reduce using rule 23 ($@6)

    $@6  go to state 45


state 31

   20 DECLARE_STMT: INT ID . $@4 IDS '$' STMTS
   22             | INT ID . EQ EXP $@5 '$' STMTS

    EQ  shift, and go to state 46

    $default  reduce using rule 19 ($@4)

    $@4  go to state 47


state 32

   58 EXP: INTVAL .

    $default  reduce using rule 58 (EXP)


state 33

   66 EXP: char_val .

    $default  reduce using rule 66 (EXP)


state 34

   68 EXP: '-' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 48


state 35

   64 EXP: NOT . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 49


state 36

   65 EXP: '(' . EXP ')'

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 50


state 37

   67 EXP: ID .

    $default  reduce using rule 67 (EXP)


state 38

   51 RETURN_STMT: RETURN EXP . '$' STMTS
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    '$'       shift, and go to state 62


state 39

   34 WHILE_STMT: WHILE $@10 . '(' EXP ')' '{' STMTS '}' $@11 STMTS

    '('  shift, and go to state 63


state 40

   37 IF_STMT: IF $@12 . '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '('  shift, and go to state 64


state 41

   45 FUNC_CALL: ID '(' . ARGS_IN ')' '$' STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    $default  reduce using rule 46 (ARGS_IN)

    EXP      go to state 65
    ARGS_IN  go to state 66


state 42

   31 ASSIGN_STMT: ID EQ . EXP '$' $@9 STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 67


state 43

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' . $@3 PROGRAM

    $default  reduce using rule 3 ($@3)

    $@3  go to state 68


state 44

   26 DECLARE_STMT: CHAR ID EQ . char_val $@7 '$' STMTS

    char_val  shift, and go to state 69


state 45

   24 DECLARE_STMT: CHAR ID $@6 . IDS '$' STMTS

    ','  shift, and go to state 70

    $default  reduce using rule 27 (IDS)

    IDS  go to state 71


state 46

   22 DECLARE_STMT: INT ID EQ . EXP $@5 '$' STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 72


state 47

   20 DECLARE_STMT: INT ID $@4 . IDS '$' STMTS

    ','  shift, and go to state 70

    $default  reduce using rule 27 (IDS)

    IDS  go to state 73


state 48

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP
   68    | '-' EXP .

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 68 (EXP)


state 49

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP
   64    | NOT EXP .

    $default  reduce using rule 64 (EXP)


state 50

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP
   65    | '(' EXP . ')'

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    ')'       shift, and go to state 74


state 51

   60 EXP: EXP COND_OR . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 75


state 52

   59 EXP: EXP COND_AND . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 76


state 53

   61 EXP: EXP LOG_OR . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 77


state 54

   63 EXP: EXP LOG_XOR . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 78


state 55

   62 EXP: EXP LOG_AND . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 79


state 56

   53 EXP: EXP ISNOTEQ . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 80


state 57

   52 EXP: EXP ISEQ . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 81


state 58

   54 EXP: EXP '+' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 82


state 59

   55 EXP: EXP '-' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 83


state 60

   56 EXP: EXP '*' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 84


state 61

   57 EXP: EXP '/' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 85


state 62

   51 RETURN_STMT: RETURN EXP '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 86
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 63

   34 WHILE_STMT: WHILE $@10 '(' . EXP ')' '{' STMTS '}' $@11 STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 87


state 64

   37 IF_STMT: IF $@12 '(' . EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 88


state 65

   47 ARGS_IN: EXP . ',' EXP ',' EXP ',' EXP
   48        | EXP . ',' EXP ',' EXP
   49        | EXP . ',' EXP
   50        | EXP .
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    ','       shift, and go to state 89
    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 50 (ARGS_IN)


state 66

   45 FUNC_CALL: ID '(' ARGS_IN . ')' '$' STMTS

    ')'  shift, and go to state 90


state 67

   31 ASSIGN_STMT: ID EQ EXP . '$' $@9 STMTS
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    '$'       shift, and go to state 91


state 68

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 . PROGRAM

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 5 (PROGRAM)

    PROGRAM  go to state 92
    FTYPE    go to state 4


state 69

   26 DECLARE_STMT: CHAR ID EQ char_val . $@7 '$' STMTS

    $default  reduce using rule 25 ($@7)

    $@7  go to state 93


state 70

   29 IDS: ',' . ID $@8 IDS

    ID  shift, and go to state 94


state 71

   24 DECLARE_STMT: CHAR ID $@6 IDS . '$' STMTS

    '$'  shift, and go to state 95


state 72

   22 DECLARE_STMT: INT ID EQ EXP . $@5 '$' STMTS
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 21 ($@5)

    $@5  go to state 96


state 73

   20 DECLARE_STMT: INT ID $@4 IDS . '$' STMTS

    '$'  shift, and go to state 97


state 74

   65 EXP: '(' EXP ')' .

    $default  reduce using rule 65 (EXP)


state 75

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   60    | EXP COND_OR EXP .
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 60 (EXP)


state 76

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   59    | EXP COND_AND EXP .
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    LOG_OR   shift, and go to state 53
    LOG_XOR  shift, and go to state 54
    LOG_AND  shift, and go to state 55
    ISNOTEQ  shift, and go to state 56
    ISEQ     shift, and go to state 57
    '+'      shift, and go to state 58
    '-'      shift, and go to state 59
    '*'      shift, and go to state 60
    '/'      shift, and go to state 61

    $default  reduce using rule 59 (EXP)


state 77

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   61    | EXP LOG_OR EXP .
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    LOG_XOR  shift, and go to state 54
    LOG_AND  shift, and go to state 55
    ISNOTEQ  shift, and go to state 56
    ISEQ     shift, and go to state 57
    '+'      shift, and go to state 58
    '-'      shift, and go to state 59
    '*'      shift, and go to state 60
    '/'      shift, and go to state 61

    $default  reduce using rule 61 (EXP)


state 78

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP
   63    | EXP LOG_XOR EXP .

    LOG_AND  shift, and go to state 55
    ISNOTEQ  shift, and go to state 56
    ISEQ     shift, and go to state 57
    '+'      shift, and go to state 58
    '-'      shift, and go to state 59
    '*'      shift, and go to state 60
    '/'      shift, and go to state 61

    $default  reduce using rule 63 (EXP)


state 79

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   62    | EXP LOG_AND EXP .
   63    | EXP . LOG_XOR EXP

    ISNOTEQ  shift, and go to state 56
    ISEQ     shift, and go to state 57
    '+'      shift, and go to state 58
    '-'      shift, and go to state 59
    '*'      shift, and go to state 60
    '/'      shift, and go to state 61

    $default  reduce using rule 62 (EXP)


state 80

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   53    | EXP ISNOTEQ EXP .
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 53 (EXP)


state 81

   52 EXP: EXP . ISEQ EXP
   52    | EXP ISEQ EXP .
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 52 (EXP)


state 82

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   54    | EXP '+' EXP .
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 54 (EXP)


state 83

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   55    | EXP '-' EXP .
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 55 (EXP)


state 84

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   56    | EXP '*' EXP .
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    $default  reduce using rule 56 (EXP)


state 85

   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   57    | EXP '/' EXP .
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    $default  reduce using rule 57 (EXP)


state 86

   51 RETURN_STMT: RETURN EXP '$' STMTS .

    $default  reduce using rule 51 (RETURN_STMT)


state 87

   34 WHILE_STMT: WHILE $@10 '(' EXP . ')' '{' STMTS '}' $@11 STMTS
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    ')'       shift, and go to state 98


state 88

   37 IF_STMT: IF $@12 '(' EXP . ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    ')'       shift, and go to state 99


state 89

   47 ARGS_IN: EXP ',' . EXP ',' EXP ',' EXP
   48        | EXP ',' . EXP ',' EXP
   49        | EXP ',' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 100


state 90

   45 FUNC_CALL: ID '(' ARGS_IN ')' . '$' STMTS

    '$'  shift, and go to state 101


state 91

   31 ASSIGN_STMT: ID EQ EXP '$' . $@9 STMTS

    $default  reduce using rule 30 ($@9)

    $@9  go to state 102


state 92

    4 PROGRAM: FTYPE ID $@1 '(' PARAMS $@2 ')' '{' STMTS '}' $@3 PROGRAM .

    $default  reduce using rule 4 (PROGRAM)


state 93

   26 DECLARE_STMT: CHAR ID EQ char_val $@7 . '$' STMTS

    '$'  shift, and go to state 103


state 94

   29 IDS: ',' ID . $@8 IDS

    $default  reduce using rule 28 ($@8)

    $@8  go to state 104


state 95

   24 DECLARE_STMT: CHAR ID $@6 IDS '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 105
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 96

   22 DECLARE_STMT: INT ID EQ EXP $@5 . '$' STMTS

    '$'  shift, and go to state 106


state 97

   20 DECLARE_STMT: INT ID $@4 IDS '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 107
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 98

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' . '{' STMTS '}' $@11 STMTS

    '{'  shift, and go to state 108


state 99

   37 IF_STMT: IF $@12 '(' EXP ')' . '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '{'  shift, and go to state 109


state 100

   47 ARGS_IN: EXP ',' EXP . ',' EXP ',' EXP
   48        | EXP ',' EXP . ',' EXP
   49        | EXP ',' EXP .
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    ','       shift, and go to state 110
    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 49 (ARGS_IN)


state 101

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 111
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 102

   31 ASSIGN_STMT: ID EQ EXP '$' $@9 . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 112
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 103

   26 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 113
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 104

   29 IDS: ',' ID $@8 . IDS

    ','  shift, and go to state 70

    $default  reduce using rule 27 (IDS)

    IDS  go to state 114


state 105

   24 DECLARE_STMT: CHAR ID $@6 IDS '$' STMTS .

    $default  reduce using rule 24 (DECLARE_STMT)


state 106

   22 DECLARE_STMT: INT ID EQ EXP $@5 '$' . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 115
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 107

   20 DECLARE_STMT: INT ID $@4 IDS '$' STMTS .

    $default  reduce using rule 20 (DECLARE_STMT)


state 108

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' . STMTS '}' $@11 STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 116
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 109

   37 IF_STMT: IF $@12 '(' EXP ')' '{' . STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 117
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 110

   47 ARGS_IN: EXP ',' EXP ',' . EXP ',' EXP
   48        | EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 118


state 111

   45 FUNC_CALL: ID '(' ARGS_IN ')' '$' STMTS .

    $default  reduce using rule 45 (FUNC_CALL)


state 112

   31 ASSIGN_STMT: ID EQ EXP '$' $@9 STMTS .

    $default  reduce using rule 31 (ASSIGN_STMT)


state 113

   26 DECLARE_STMT: CHAR ID EQ char_val $@7 '$' STMTS .

    $default  reduce using rule 26 (DECLARE_STMT)


state 114

   29 IDS: ',' ID $@8 IDS .

    $default  reduce using rule 29 (IDS)


state 115

   22 DECLARE_STMT: INT ID EQ EXP $@5 '$' STMTS .

    $default  reduce using rule 22 (DECLARE_STMT)


state 116

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS . '}' $@11 STMTS

    '}'  shift, and go to state 119


state 117

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS . '}' ELSEIF_STMT ELSE_STMT $@13 STMTS

    '}'  shift, and go to state 120


state 118

   47 ARGS_IN: EXP ',' EXP ',' EXP . ',' EXP
   48        | EXP ',' EXP ',' EXP .
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    ','       shift, and go to state 121
    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 48 (ARGS_IN)


state 119

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' . $@11 STMTS

    $default  reduce using rule 33 ($@11)

    $@11  go to state 122


state 120

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' . ELSEIF_STMT ELSE_STMT $@13 STMTS

    ELSEIF  shift, and go to state 123

    $default  reduce using rule 41 (ELSEIF_STMT)

    ELSEIF_STMT  go to state 124


state 121

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' . EXP

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 125


state 122

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 126
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 123

   40 ELSEIF_STMT: ELSEIF . $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF

    $default  reduce using rule 38 ($@14)

    $@14  go to state 127


state 124

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT . ELSE_STMT $@13 STMTS

    ELSE  shift, and go to state 128

    $default  reduce using rule 44 (ELSE_STMT)

    ELSE_STMT  go to state 129


state 125

   47 ARGS_IN: EXP ',' EXP ',' EXP ',' EXP .
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61

    $default  reduce using rule 47 (ARGS_IN)


state 126

   34 WHILE_STMT: WHILE $@10 '(' EXP ')' '{' STMTS '}' $@11 STMTS .

    $default  reduce using rule 34 (WHILE_STMT)


state 127

   40 ELSEIF_STMT: ELSEIF $@14 . '(' EXP ')' '{' STMTS '}' $@15 ELSEIF

    '('  shift, and go to state 130


state 128

   43 ELSE_STMT: ELSE . $@16 '{' STMTS '}'

    $default  reduce using rule 42 ($@16)

    $@16  go to state 131


state 129

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT . $@13 STMTS

    $default  reduce using rule 36 ($@13)

    $@13  go to state 132


state 130

   40 ELSEIF_STMT: ELSEIF $@14 '(' . EXP ')' '{' STMTS '}' $@15 ELSEIF

    INTVAL    shift, and go to state 32
    char_val  shift, and go to state 33
    '-'       shift, and go to state 34
    NOT       shift, and go to state 35
    '('       shift, and go to state 36
    ID        shift, and go to state 37

    EXP  go to state 133


state 131

   43 ELSE_STMT: ELSE $@16 . '{' STMTS '}'

    '{'  shift, and go to state 134


state 132

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 . STMTS

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 135
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 133

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP . ')' '{' STMTS '}' $@15 ELSEIF
   52 EXP: EXP . ISEQ EXP
   53    | EXP . ISNOTEQ EXP
   54    | EXP . '+' EXP
   55    | EXP . '-' EXP
   56    | EXP . '*' EXP
   57    | EXP . '/' EXP
   59    | EXP . COND_AND EXP
   60    | EXP . COND_OR EXP
   61    | EXP . LOG_OR EXP
   62    | EXP . LOG_AND EXP
   63    | EXP . LOG_XOR EXP

    COND_OR   shift, and go to state 51
    COND_AND  shift, and go to state 52
    LOG_OR    shift, and go to state 53
    LOG_XOR   shift, and go to state 54
    LOG_AND   shift, and go to state 55
    ISNOTEQ   shift, and go to state 56
    ISEQ      shift, and go to state 57
    '+'       shift, and go to state 58
    '-'       shift, and go to state 59
    '*'       shift, and go to state 60
    '/'       shift, and go to state 61
    ')'       shift, and go to state 136


state 134

   43 ELSE_STMT: ELSE $@16 '{' . STMTS '}'

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 137
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 135

   37 IF_STMT: IF $@12 '(' EXP ')' '{' STMTS '}' ELSEIF_STMT ELSE_STMT $@13 STMTS .

    $default  reduce using rule 37 (IF_STMT)


state 136

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' . '{' STMTS '}' $@15 ELSEIF

    '{'  shift, and go to state 138


state 137

   43 ELSE_STMT: ELSE $@16 '{' STMTS . '}'

    '}'  shift, and go to state 139


state 138

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' . STMTS '}' $@15 ELSEIF

    CHAR    shift, and go to state 17
    INT     shift, and go to state 18
    RETURN  shift, and go to state 19
    WHILE   shift, and go to state 20
    IF      shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 18 (STMTS)

    STMTS         go to state 140
    DECLARE_STMT  go to state 24
    ASSIGN_STMT   go to state 25
    WHILE_STMT    go to state 26
    IF_STMT       go to state 27
    FUNC_CALL     go to state 28
    RETURN_STMT   go to state 29


state 139

   43 ELSE_STMT: ELSE $@16 '{' STMTS '}' .

    $default  reduce using rule 43 (ELSE_STMT)


state 140

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS . '}' $@15 ELSEIF

    '}'  shift, and go to state 141


state 141

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' . $@15 ELSEIF

    $default  reduce using rule 39 ($@15)

    $@15  go to state 142


state 142

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 . ELSEIF

    ELSEIF  shift, and go to state 143


state 143

   40 ELSEIF_STMT: ELSEIF $@14 '(' EXP ')' '{' STMTS '}' $@15 ELSEIF .

    $default  reduce using rule 40 (ELSEIF_STMT)
